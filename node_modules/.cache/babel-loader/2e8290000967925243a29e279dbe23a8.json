{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-template/src/components/SearchBar.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { onSearchSubmit, onInputChange } from \"../actions\";\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onInputChange = event => {\n      this.props.onInputChange(event.target.value);\n    };\n\n    this.onFormSubmit = event => {\n      event.preventDefault(); //Prevents page from refresh entering return key\n      //TODO: make sure to call callback from parent APP component\n\n      this.props.onFormSubmit(this.props.searchTerm);\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Video Search\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.searchTerm,\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchTerm: state.searchTerm\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onSearchSubmit,\n  onInputChange\n})(SearchBar);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-template/src/components/SearchBar.js"],"names":["React","connect","onSearchSubmit","onInputChange","SearchBar","Component","event","props","target","value","onFormSubmit","preventDefault","searchTerm","render","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEtCF,aAFsC,GAEtBG,KAAK,IAAI;AACvB,WAAKC,KAAL,CAAWJ,aAAX,CAAyBG,KAAK,CAACE,MAAN,CAAaC,KAAtC;AACD,KAJqC;;AAAA,SAOtCC,YAPsC,GAOvBJ,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACK,cAAN,GADsB,CACE;AAExB;;AACA,WAAKJ,KAAL,CAAWG,YAAX,CAAwB,KAAKH,KAAL,CAAWK,UAAnC;AACD,KAZqC;AAAA;;AActCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,UAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKT,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CADF;AAcD;;AA9BqC;;AAiCxC,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AAApB,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CACbC,SADa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { onSearchSubmit, onInputChange } from \"../actions\";\n\nclass SearchBar extends React.Component {\n  //This sets the state to the input\n  onInputChange = event => {\n    this.props.onInputChange(event.target.value);\n  };\n\n  //This will send the input to App component for the API request\n  onFormSubmit = event => {\n    event.preventDefault(); //Prevents page from refresh entering return key\n\n    //TODO: make sure to call callback from parent APP component\n    this.props.onFormSubmit(this.props.searchTerm);\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <div>\n            <label>Video Search</label>\n            <input\n              type=\"text\"\n              value={this.props.searchTerm}\n              onChange={this.onInputChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { searchTerm: state.searchTerm };\n};\n\nexport default connect(mapStateToProps, { onSearchSubmit, onInputChange })(\n  SearchBar,\n);\n"]},"metadata":{},"sourceType":"module"}