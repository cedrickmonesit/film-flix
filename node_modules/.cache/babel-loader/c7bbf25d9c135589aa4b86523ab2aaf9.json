{"ast":null,"code":"import TMDB, { KEY } from \"../apis/TMDB\"; //Import baseURL & API Key\n//action creator\n//Applying redux-thunk to action creator that is async await to request API\n\nexport const fetchMovies = searchTerm => async dispatch => {\n  const response = await TMDB.get(`/search/movie?api_key=${KEY}&query=${searchTerm}`);\n  dispatch({\n    type: \"FETCH_MOVIES\",\n    payload: response.data\n  });\n}; //action creator\n//Creates an action with a payload that is the changed input\n\nexport const onInputChange = searchTerm => {\n  //connect function in component will handle dispatch of this action\n  return {\n    type: \"ON_INPUT_CHANGE\",\n    payload: searchTerm\n  };\n}; //action creator\n//Creates an action with a payload of the trending movie data from the API request\n//does not dispatch action until API data has been loaded\n\nexport const fetchTrending = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_TRENDING\",\n    payload: response.data\n  });\n}; //action creator\n//Creates an action with a payload of upcoming movie data from the API request\n//does not dispatch action until API data has been loaded\n\nexport const fetchUpcoming = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${KEY}`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_UPCOMING\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchMovieDetails = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_UPCOMING\",\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/actions/index.js"],"names":["TMDB","KEY","fetchMovies","searchTerm","dispatch","response","get","type","payload","data","onInputChange","fetchTrending","fetchUpcoming","fetchMovieDetails","movieId"],"mappings":"AAAA,OAAOA,IAAP,IAAeC,GAAf,QAA0B,cAA1B,C,CAA0C;AAE1C;AACA;;AACA,OAAO,MAAMC,WAAW,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACzD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CACpB,yBAAwBL,GAAI,UAASE,UAAW,EAD5B,CAAvB;AAIAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA1C,GAAD,CAAR;AACD,CANM,C,CAQP;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGP,UAAU,IAAI;AACzC;AACA,SAAO;AACLI,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CANM,C,CAQP;AACA;AACA;;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAM,MAAMP,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CACpB,4DAA2DL,GAAI,EAD3C,CAAvB,CADmD,CAKnD;;AACAG,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,GAAD,CAAR;AACD,CAPM,C,CASP;AACA;AACA;;AACA,OAAO,MAAMG,aAAa,GAAG,MAAM,MAAMR,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CACpB,uDAAsDL,GAAI,EADtC,CAAvB,CADmD,CAKnD;;AACAG,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,GAAD,CAAR;AACD,CAPM,C,CASP;;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAM,MAAMT,QAAN,IAAkB;AACvD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CACpB,sCAAqCQ,OAAQ,YAAWb,GAAI,EADxC,CAAvB,CADuD,CAKvD;;AACAG,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,GAAD,CAAR;AACD,CAPM","sourcesContent":["import TMDB, { KEY } from \"../apis/TMDB\"; //Import baseURL & API Key\n\n//action creator\n//Applying redux-thunk to action creator that is async await to request API\nexport const fetchMovies = searchTerm => async dispatch => {\n  const response = await TMDB.get(\n    `/search/movie?api_key=${KEY}&query=${searchTerm}`,\n  );\n\n  dispatch({ type: \"FETCH_MOVIES\", payload: response.data });\n};\n\n//action creator\n//Creates an action with a payload that is the changed input\nexport const onInputChange = searchTerm => {\n  //connect function in component will handle dispatch of this action\n  return {\n    type: \"ON_INPUT_CHANGE\",\n    payload: searchTerm,\n  };\n};\n\n//action creator\n//Creates an action with a payload of the trending movie data from the API request\n//does not dispatch action until API data has been loaded\nexport const fetchTrending = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_TRENDING\", payload: response.data });\n};\n\n//action creator\n//Creates an action with a payload of upcoming movie data from the API request\n//does not dispatch action until API data has been loaded\nexport const fetchUpcoming = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${KEY}`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_UPCOMING\", payload: response.data });\n};\n\n//action creator\nexport const fetchMovieDetails = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_UPCOMING\", payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}