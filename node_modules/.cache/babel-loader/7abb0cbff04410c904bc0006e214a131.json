{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/searchresults/SearchResults.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchResults } from \"../../actions\";\nimport MovieList from \"../movielist/MovieList\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchResults(this.props.match.params.movie);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.movie;\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"main-search-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Search Results For \", this.renderSearchTerm()), React.createElement(MovieList, {\n      movies: this.props.movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n} //filter data from redux store to use in the component as a prop\n\n\nconst mapStateToProps = state => {\n  return {\n    results: state.resultsData.results\n  };\n}; //connect function from react-redux to access redux store and dispatch actions\n\n\nexport default connect(mapStateToProps, {\n  fetchResults\n})(MovieCard);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/searchresults/SearchResults.js"],"names":["React","connect","fetchResults","MovieList","MovieCard","Component","componentDidMount","fetchData","props","match","params","movie","renderSearchTerm","render","console","log","movies","mapStateToProps","state","results","resultsData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,sBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AACV;AACA,QAAI,KAAKC,KAAL,CAAWC,KAAf,EAAsB;AACpB,WAAKD,KAAL,CAAWN,YAAX,CAAwB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,KAAhD;AACD;AACF;;AAEDC,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKJ,KAAL,CAAWC,KAAf,EAAsB;AACpB,aAAO,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,KAA/B;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKI,gBAAL,EAAxB,CADF,EAEE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA1BqC,C,CA6BxC;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD;AAA7B,GAAP;AACD,CAFD,C,CAIA;;;AACA,eAAelB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,SAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchResults } from \"../../actions\";\nimport MovieList from \"../movielist/MovieList\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchResults(this.props.match.params.movie);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.movie;\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"main-search-results\">\n        <h1>Search Results For {this.renderSearchTerm()}</h1>\n        <MovieList movies={this.props.movies} />\n      </div>\n    );\n  }\n}\n\n//filter data from redux store to use in the component as a prop\nconst mapStateToProps = state => {\n  return { results: state.resultsData.results };\n};\n\n//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps, { fetchResults })(MovieCard);\n"]},"metadata":{},"sourceType":"module"}