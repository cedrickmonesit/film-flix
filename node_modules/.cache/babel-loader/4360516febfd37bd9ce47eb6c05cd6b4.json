{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\nimport { TiDelete } from \"react-icons/ti\";\nimport \"./card.scss\"; //you must say if the shows props is true so if you are passing an array of shows shows={true}\n\nconst Card = props => {\n  const isDeletable = isDeletable => {\n    if (isDeletable) {\n      return React.createElement(\"div\", {\n        className: \"card-delete-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(TiDelete, {\n        className: \"card-delete-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  };\n\n  const handleCardClickEvent = event => {\n    if (event.target.classList.contains(\".card-delete-container\")) {\n      console.log(event.target);\n    }\n  };\n\n  const renderCard = items => {\n    //if movies or shows from api hasn't been loaded will render nothing, prevents error\n    if (items) {\n      //loop through movies or shows foreach movie return jsx\n      return items.map(item => {\n        if (props.type === \"shows\" || item.media_type === \"tv\") {\n          if (item.poster_path) {\n            return React.createElement(\"div\", {\n              key: item.id,\n              className: \"movie-card\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: `/details/show/${item.id}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"movie-card-image-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"movie-card-image\",\n              src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n              alt: item.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"movie-card-rating \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, React.createElement(FaStar, {\n              className: \"movie-card-star-rating\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, item.vote_average))), React.createElement(\"p\", {\n              className: \"movie-card-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, item.name)));\n          }\n        }\n\n        if (item.poster_path) {\n          return React.createElement(\"div\", {\n            key: item.id,\n            className: \"movie-card\",\n            onClickCapture: handleCardClickEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"movie-card-image-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"movie-card-image\",\n            src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n            alt: item.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"movie-card-rating \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(FaStar, {\n            className: \"movie-card-star-rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, item.vote_average)), isDeletable(props.isDeletable)), React.createElement(\"p\", {\n            className: \"movie-card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, item.title));\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  };\n\n  return renderCard(props.items);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js"],"names":["React","Link","FaStar","TiDelete","Card","props","isDeletable","handleCardClickEvent","event","target","classList","contains","console","log","renderCard","items","map","item","type","media_type","poster_path","id","title","vote_average","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\nimport { TiDelete } from \"react-icons/ti\";\n\nimport \"./card.scss\";\n\n//you must say if the shows props is true so if you are passing an array of shows shows={true}\nconst Card = (props) => {\n  const isDeletable = (isDeletable) => {\n    if (isDeletable) {\n      return (\n        <div className=\"card-delete-container\">\n          <TiDelete className=\"card-delete-btn\" />\n        </div>\n      );\n    }\n  };\n\n  const handleCardClickEvent = (event) => {\n    if (event.target.classList.contains(\".card-delete-container\")) {\n      console.log(event.target);\n    }\n  };\n\n  const renderCard = (items) => {\n    //if movies or shows from api hasn't been loaded will render nothing, prevents error\n    if (items) {\n      //loop through movies or shows foreach movie return jsx\n      return items.map((item) => {\n        if (props.type === \"shows\" || item.media_type === \"tv\") {\n          if (item.poster_path) {\n            return (\n              <div key={item.id} className=\"movie-card\">\n                <Link to={`/details/show/${item.id}`}>\n                  <div className=\"movie-card-image-container\">\n                    <img\n                      className=\"movie-card-image\"\n                      src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                      alt={item.title}\n                    />\n                    <div className=\"movie-card-rating \">\n                      <FaStar className=\"movie-card-star-rating\" />\n                      <p>{item.vote_average}</p>\n                    </div>\n                  </div>\n                  <p className=\"movie-card-title\">{item.name}</p>\n                </Link>\n              </div>\n            );\n          }\n        }\n        if (item.poster_path) {\n          return (\n            <div\n              key={item.id}\n              className=\"movie-card\"\n              onClickCapture={handleCardClickEvent}\n            >\n              {/*<Link to={`/details/movie/${item.id}`}>*/}\n              <div className=\"movie-card-image-container\">\n                <img\n                  className=\"movie-card-image\"\n                  src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                  alt={item.title}\n                />\n                <div className=\"movie-card-rating \">\n                  <FaStar className=\"movie-card-star-rating\" />\n                  <p>{item.vote_average}</p>\n                </div>\n                {isDeletable(props.isDeletable)}\n              </div>\n              <p className=\"movie-card-title\">{item.title}</p>\n              {/*</Link>*/}\n            </div>\n          );\n        }\n        return null;\n      });\n    }\n    return null;\n  };\n  return renderCard(props.items);\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}