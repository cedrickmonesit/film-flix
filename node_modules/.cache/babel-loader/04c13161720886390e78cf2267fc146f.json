{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/details/showdetails/ShowDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FaStar, FaRegStar } from \"react-icons/fa\";\nimport Rating from \"react-rating\";\nimport { fetchShowDetails, fetchShowVideos, fetchShowCredits, fetchShowSimilar, fetchGenres } from \"../../../actions\";\nimport \"../movieDetails.scss\";\nimport TrailersCarousel from \"../trailerscarousel/TrailersCarousel\";\nimport PeopleCarousel from \"../peoplecarousel/PeopleCarousel\";\nimport Carousel from \"../../carousel/Carousel\";\nimport renderMovieGenres from \"../../renderMovieGenres\";\n\nclass ShowDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDetails = () => {\n      if (this.props.show) {\n        return React.createElement(\"div\", {\n          className: \"movie-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"movie-details-header\",\n          style: {\n            background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.show.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"movie-details-header-info-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"movie-details-poster\",\n          src: `http://image.tmdb.org/t/p/w500/${this.props.show.poster_path}`,\n          alt: this.props.show.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"movie-details-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, this.props.show.title), React.createElement(Rating, {\n          emptySymbol: React.createElement(FaRegStar, {\n            className: \"movie-details-star-rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }),\n          fullSymbol: React.createElement(FaStar, {\n            className: \"movie-details-star-rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }),\n          initialRating: this.props.show.vote_average / 2,\n          readonly: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, `${this.props.show.status} | ${this.renderDate(this.props.show.release_date)} |\n                  ${this.props.show.original_language}`), React.createElement(\"p\", {\n          className: \"movie-details-summary-genres\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, renderMovieGenres(this.props.show.genres, this.props.genres))))), React.createElement(\"main\", {\n          className: \"movie-details-main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"movie-details-summary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Summary\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, this.props.show.overview)), this.renderVideos(this.props.videos), this.renderCredits(this.props.credits), this.renderSimilarShows(this.props.similar)));\n      }\n\n      return;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  } //checks if props changed compares it to previous props\n  //checks if id is the same as previous id\n  //the props being changed is the id in the URL to make the request to the api using id\n  //scroll to the top\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.fetchData();\n    }\n\n    window.scrollTo(0, 0);\n  } //make api request using action creators\n\n\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchShowDetails(id);\n    this.props.fetchGenres();\n    console.log(id);\n  }\n\n  renderSimilarShows(similar) {\n    if (similar === undefined || similar.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"movie-details-carousel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"movie-details-main-genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Similar Shows\"), React.createElement(Carousel, {\n      movies: similar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n  renderVideos(videos) {\n    if (videos === undefined || videos.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"movie-details-carousel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"movie-details-main-genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Videos\"), React.createElement(TrailersCarousel, {\n      videos: videos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  } //if credits data have not loaded return nothing\n\n\n  renderCredits(credits) {\n    if (credits === undefined || credits.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"movie-details-carousel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"movie-details-main-genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cast\"), React.createElement(PeopleCarousel, {\n      credits: credits,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  } //filter year/month/day from release date\n\n\n  renderDate(releaseDate) {\n    if (releaseDate) {\n      const date = releaseDate.split(\"-\");\n      const year = date[0];\n      return year;\n    }\n\n    return null;\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" \", this.renderDetails());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.showDetails,\n    credits: state.showCredits.cast,\n    videos: state.showVideos.results,\n    similar: state.showSimilar.results,\n    genres: state.genresData.genres\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchShowDetails,\n  fetchShowVideos,\n  fetchShowCredits,\n  fetchShowSimilar,\n  fetchGenres\n})(ShowDetails);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/details/showdetails/ShowDetails.js"],"names":["React","connect","FaStar","FaRegStar","Rating","fetchShowDetails","fetchShowVideos","fetchShowCredits","fetchShowSimilar","fetchGenres","TrailersCarousel","PeopleCarousel","Carousel","renderMovieGenres","ShowDetails","Component","renderDetails","props","show","background","backdrop_path","poster_path","title","vote_average","status","renderDate","release_date","original_language","genres","overview","renderVideos","videos","renderCredits","credits","renderSimilarShows","similar","componentDidMount","fetchData","componentDidUpdate","prevProps","match","params","id","window","scrollTo","console","log","undefined","length","releaseDate","date","split","year","render","mapStateToProps","state","movie","showDetails","showCredits","cast","showVideos","results","showSimilar","genresData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FaStar, FaRegStar } from \"react-icons/fa\";\nimport Rating from \"react-rating\";\n\nimport {\n  fetchShowDetails,\n  fetchShowVideos,\n  fetchShowCredits,\n  fetchShowSimilar,\n  fetchGenres,\n} from \"../../../actions\";\nimport \"../movieDetails.scss\";\nimport TrailersCarousel from \"../trailerscarousel/TrailersCarousel\";\nimport PeopleCarousel from \"../peoplecarousel/PeopleCarousel\";\nimport Carousel from \"../../carousel/Carousel\";\nimport renderMovieGenres from \"../../renderMovieGenres\";\n\nclass ShowDetails extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  //checks if props changed compares it to previous props\n  //checks if id is the same as previous id\n  //the props being changed is the id in the URL to make the request to the api using id\n  //scroll to the top\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.fetchData();\n    }\n    window.scrollTo(0, 0);\n  }\n\n  //make api request using action creators\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchShowDetails(id);\n\n    this.props.fetchGenres();\n    console.log(id);\n  }\n\n  renderSimilarShows(similar) {\n    if (similar === undefined || similar.length === 0) {\n      return null;\n    }\n    return (\n      <div className=\"movie-details-carousel-container\">\n        <h1 className=\"movie-details-main-genre\">Similar Shows</h1>\n        <Carousel movies={similar} />\n      </div>\n    );\n  }\n\n  renderVideos(videos) {\n    if (videos === undefined || videos.length === 0) {\n      return null;\n    }\n    return (\n      <div className=\"movie-details-carousel-container\">\n        <h1 className=\"movie-details-main-genre\">Videos</h1>\n        <TrailersCarousel videos={videos} />\n      </div>\n    );\n  }\n\n  //if credits data have not loaded return nothing\n  renderCredits(credits) {\n    if (credits === undefined || credits.length === 0) {\n      return null;\n    }\n    return (\n      <div className=\"movie-details-carousel-container\">\n        <h1 className=\"movie-details-main-genre\">Cast</h1>\n        <PeopleCarousel credits={credits} />\n      </div>\n    );\n  }\n\n  //filter year/month/day from release date\n  renderDate(releaseDate) {\n    if (releaseDate) {\n      const date = releaseDate.split(\"-\");\n      const year = date[0];\n      return year;\n    }\n    return null;\n  }\n\n  renderDetails = () => {\n    if (this.props.show) {\n      return (\n        <div className=\"movie-details\">\n          <header\n            className=\"movie-details-header\"\n            style={{\n              background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.show.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n            }}\n          >\n            <div className=\"movie-details-header-info-container\">\n              <img\n                className=\"movie-details-poster\"\n                src={`http://image.tmdb.org/t/p/w500/${this.props.show.poster_path}`}\n                alt={this.props.show.title}\n              />\n              <div className=\"movie-details-title\">\n                <h1>{this.props.show.title}</h1>\n                <Rating\n                  emptySymbol={\n                    <FaRegStar className=\"movie-details-star-rating\" />\n                  }\n                  fullSymbol={<FaStar className=\"movie-details-star-rating\" />}\n                  initialRating={this.props.show.vote_average / 2}\n                  readonly\n                />\n                <p>\n                  {`${this.props.show.status} | ${this.renderDate(\n                    this.props.show.release_date,\n                  )} |\n                  ${this.props.show.original_language}`}\n                </p>\n                <p className=\"movie-details-summary-genres\">\n                  {renderMovieGenres(this.props.show.genres, this.props.genres)}\n                </p>\n              </div>\n            </div>\n          </header>\n          <main className=\"movie-details-main\">\n            <div className=\"movie-details-summary\">\n              <h2>Summary</h2>\n              <p>{this.props.show.overview}</p>\n            </div>\n\n            {this.renderVideos(this.props.videos)}\n\n            {this.renderCredits(this.props.credits)}\n\n            {this.renderSimilarShows(this.props.similar)}\n          </main>\n        </div>\n      );\n    }\n    return;\n  };\n  render() {\n    console.log(this.props);\n    return <React.Fragment> {this.renderDetails()}</React.Fragment>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movie: state.showDetails,\n    credits: state.showCredits.cast,\n    videos: state.showVideos.results,\n    similar: state.showSimilar.results,\n    genres: state.genresData.genres,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchShowDetails,\n  fetchShowVideos,\n  fetchShowCredits,\n  fetchShowSimilar,\n  fetchGenres,\n})(ShowDetails);\n"]},"metadata":{},"sourceType":"module"}