{"ast":null,"code":"import _classCallCheck from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import{postFavorite}from\"../../actions\";import{FaStar}from\"react-icons/fa\";import{TiDelete}from\"react-icons/ti\";import history from\"../../history\";import\"./card.scss\";//you must say if the shows props is true so if you are passing an array of shows shows={true}\nvar Card=/*#__PURE__*/function(_React$Component){_inherits(Card,_React$Component);function Card(){var _getPrototypeOf2;var _this;_classCallCheck(this,Card);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Card)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.isDeletable=function(isDeletable){if(isDeletable){return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"card-delete-btn-cover\"}),React.createElement(TiDelete,{className:\"card-delete-btn\"}));}};_this.handleCardClickEvent=function(event,id,type){if(event.target.classList.contains(\"card-delete-btn-cover\")){if(type===\"tv\"||_this.props.type===\"shows\"){_this.props.postFavorite(id,\"tv\",false);}else{_this.props.postFavorite(id,\"movie\",false);}}else if(type===\"tv\"||_this.props.type===\"shows\"){history.push(\"/details/show/\".concat(id));}else{history.push(\"/details/movie/\".concat(id));}};_this.renderCard=function(items){//if movies or shows from api hasn't been loaded will render nothing, prevents error\nif(items){//loop through movies or shows foreach movie return jsx\nreturn items.map(function(item){if(_this.props.type===\"shows\"||item.media_type===\"tv\"){if(item.poster_path){return React.createElement(\"div\",{key:item.id,className:\"movie-card\",onClickCapture:function onClickCapture(e){_this.handleCardClickEvent(e,item.id,item.media_type);}},React.createElement(\"div\",{className:\"movie-card-image-container\"},React.createElement(\"img\",{className:\"movie-card-image\",src:\"http://image.tmdb.org/t/p/w500/\".concat(item.poster_path),alt:item.title}),React.createElement(\"div\",{className:\"movie-card-rating \"},React.createElement(FaStar,{className:\"movie-card-star-rating\"}),React.createElement(\"p\",null,item.vote_average)),_this.isDeletable(_this.props.isDeletable)),React.createElement(\"p\",{className:\"movie-card-title\"},item.name));}}if(item.poster_path){return React.createElement(\"div\",{key:item.id,className:\"movie-card\",onClickCapture:function onClickCapture(e){_this.handleCardClickEvent(e,item.id);}},React.createElement(\"div\",{className:\"movie-card-image-container\"},React.createElement(\"img\",{className:\"movie-card-image\",src:\"http://image.tmdb.org/t/p/w500/\".concat(item.poster_path),alt:item.title}),React.createElement(\"div\",{className:\"movie-card-rating \"},React.createElement(FaStar,{className:\"movie-card-star-rating\"}),React.createElement(\"p\",null,item.vote_average)),_this.isDeletable(_this.props.isDeletable)),React.createElement(\"p\",{className:\"movie-card-title\"},item.title));}return null;});}return null;};return _this;}_createClass(Card,[{key:\"render\",value:function render(){return this.renderCard(this.props.items);}}]);return Card;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{status:state.postFavoriteStatus.status_message};};export default connect(mapStateToProps,{postFavorite:postFavorite})(Card);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js"],"names":["React","connect","postFavorite","FaStar","TiDelete","history","Card","isDeletable","handleCardClickEvent","event","id","type","target","classList","contains","props","push","renderCard","items","map","item","media_type","poster_path","e","title","vote_average","name","Component","mapStateToProps","state","status","postFavoriteStatus","status_message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postFavorite } from \"../../actions\";\nimport { FaStar } from \"react-icons/fa\";\nimport { TiDelete } from \"react-icons/ti\";\n\nimport history from \"../../history\";\nimport \"./card.scss\";\n\n//you must say if the shows props is true so if you are passing an array of shows shows={true}\nclass Card extends React.Component {\n  isDeletable = (isDeletable) => {\n    if (isDeletable) {\n      return (\n        <React.Fragment>\n          <div className=\"card-delete-btn-cover\"></div>\n          <TiDelete className=\"card-delete-btn\" />\n        </React.Fragment>\n      );\n    }\n  };\n\n  //handle target element for event bubbling\n  handleCardClickEvent = (event, id, type) => {\n    if (event.target.classList.contains(\"card-delete-btn-cover\")) {\n      if (type === \"tv\" || this.props.type === \"shows\") {\n        this.props.postFavorite(id, \"tv\", false);\n      } else {\n        this.props.postFavorite(id, \"movie\", false);\n      }\n    } else if (type === \"tv\" || this.props.type === \"shows\") {\n      history.push(`/details/show/${id}`);\n    } else {\n      history.push(`/details/movie/${id}`);\n    }\n  };\n\n  renderCard = (items) => {\n    //if movies or shows from api hasn't been loaded will render nothing, prevents error\n    if (items) {\n      //loop through movies or shows foreach movie return jsx\n      return items.map((item) => {\n        if (this.props.type === \"shows\" || item.media_type === \"tv\") {\n          if (item.poster_path) {\n            return (\n              <div\n                key={item.id}\n                className=\"movie-card\"\n                onClickCapture={(e) => {\n                  this.handleCardClickEvent(e, item.id, item.media_type);\n                }}\n              >\n                <div className=\"movie-card-image-container\">\n                  <img\n                    className=\"movie-card-image\"\n                    src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                    alt={item.title}\n                  />\n                  <div className=\"movie-card-rating \">\n                    <FaStar className=\"movie-card-star-rating\" />\n                    <p>{item.vote_average}</p>\n                  </div>\n                  {this.isDeletable(this.props.isDeletable)}\n                </div>\n                <p className=\"movie-card-title\">{item.name}</p>\n              </div>\n            );\n          }\n        }\n        if (item.poster_path) {\n          return (\n            <div\n              key={item.id}\n              className=\"movie-card\"\n              onClickCapture={(e) => {\n                this.handleCardClickEvent(e, item.id);\n              }}\n            >\n              <div className=\"movie-card-image-container\">\n                <img\n                  className=\"movie-card-image\"\n                  src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                  alt={item.title}\n                />\n                <div className=\"movie-card-rating \">\n                  <FaStar className=\"movie-card-star-rating\" />\n                  <p>{item.vote_average}</p>\n                </div>\n                {this.isDeletable(this.props.isDeletable)}\n              </div>\n              <p className=\"movie-card-title\">{item.title}</p>\n            </div>\n          );\n        }\n        return null;\n      });\n    }\n    return null;\n  };\n  render() {\n    return this.renderCard(this.props.items);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.postFavoriteStatus.status_message,\n  };\n};\n\nexport default connect(mapStateToProps, { postFavorite })(Card);\n"]},"metadata":{},"sourceType":"module"}