{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\nimport \"./card.scss\"; //you must say if the shows props is true so if you are passing an array of shows shows={true}\n\nconst Card = props => {\n  const renderCard = items => {\n    //if movies or shows from api hasn't been loaded will render nothing, prevents error\n    if (items) {\n      //loop through movies or shows foreach movie return jsx\n      return items.map(item => {\n        if (props.type === \"shows\") {\n          if (item.poster_path) {\n            return React.createElement(\"div\", {\n              key: item.id,\n              className: \"movie-card\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: `/details/show/${item.id}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 18\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"movie-card-image-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"movie-card-image\",\n              src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n              alt: item.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"movie-card-rating \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            }, React.createElement(FaStar, {\n              className: \"movie-card-star-rating\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26\n              },\n              __self: this\n            }), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            }, item.vote_average))), React.createElement(\"p\", {\n              className: \"movie-card-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, item.name)));\n          }\n        }\n\n        if (item.poster_path) {\n          return React.createElement(\"div\", {\n            key: item.id,\n            className: \"movie-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: `/details/movie/${item.id}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"movie-card-image-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"movie-card-image\",\n            src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n            alt: item.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"movie-card-rating \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(FaStar, {\n            className: \"movie-card-star-rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, item.vote_average))), React.createElement(\"p\", {\n            className: \"movie-card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, item.title)));\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  };\n\n  return renderCard(props.items);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js"],"names":["React","Link","FaStar","Card","props","renderCard","items","map","item","type","poster_path","id","title","vote_average","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,aAAP,C,CAEA;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA,QAAIA,KAAJ,EAAW;AACT;AACA,aAAOA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACzB,YAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;AAC1B,cAAID,IAAI,CAACE,WAAT,EAAsB;AACpB,mBACE;AAAK,cAAA,GAAG,EAAEF,IAAI,CAACG,EAAf;AAAmB,cAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AAAM,cAAA,EAAE,EAAG,iBAAgBH,IAAI,CAACG,EAAG,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,GAAG,EAAG,kCAAiCH,IAAI,CAACE,WAAY,EAF1D;AAGE,cAAA,GAAG,EAAEF,IAAI,CAACI,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAME;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIJ,IAAI,CAACK,YAAT,CAFF,CANF,CADF,EAYE;AAAG,cAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCL,IAAI,CAACM,IAAtC,CAZF,CADF,CADF;AAkBD;AACF;;AACD,YAAIN,IAAI,CAACE,WAAT,EAAsB;AACpB,iBACE;AAAK,YAAA,GAAG,EAAEF,IAAI,CAACG,EAAf;AAAmB,YAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAG,kBAAiBH,IAAI,CAACG,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,GAAG,EAAG,kCAAiCH,IAAI,CAACE,WAAY,EAF1D;AAGE,YAAA,GAAG,EAAEF,IAAI,CAACI,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAME;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIJ,IAAI,CAACK,YAAT,CAFF,CANF,CADF,EAYE;AAAG,YAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCL,IAAI,CAACI,KAAtC,CAZF,CADF,CADF;AAkBD;;AACD,eAAO,IAAP;AACD,OA5CM,CAAP;AA6CD;;AACD,WAAO,IAAP;AACD,GAnDD;;AAoDA,SAAOP,UAAU,CAACD,KAAK,CAACE,KAAP,CAAjB;AACD,CAtDD;;AAwDA,eAAeH,IAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\n\nimport \"./card.scss\";\n\n//you must say if the shows props is true so if you are passing an array of shows shows={true}\nconst Card = (props) => {\n  const renderCard = (items) => {\n    //if movies or shows from api hasn't been loaded will render nothing, prevents error\n    if (items) {\n      //loop through movies or shows foreach movie return jsx\n      return items.map((item) => {\n        if (props.type === \"shows\") {\n          if (item.poster_path) {\n            return (\n              <div key={item.id} className=\"movie-card\">\n                <Link to={`/details/show/${item.id}`}>\n                  <div className=\"movie-card-image-container\">\n                    <img\n                      className=\"movie-card-image\"\n                      src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                      alt={item.title}\n                    />\n                    <div className=\"movie-card-rating \">\n                      <FaStar className=\"movie-card-star-rating\" />\n                      <p>{item.vote_average}</p>\n                    </div>\n                  </div>\n                  <p className=\"movie-card-title\">{item.name}</p>\n                </Link>\n              </div>\n            );\n          }\n        }\n        if (item.poster_path) {\n          return (\n            <div key={item.id} className=\"movie-card\">\n              <Link to={`/details/movie/${item.id}`}>\n                <div className=\"movie-card-image-container\">\n                  <img\n                    className=\"movie-card-image\"\n                    src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                    alt={item.title}\n                  />\n                  <div className=\"movie-card-rating \">\n                    <FaStar className=\"movie-card-star-rating\" />\n                    <p>{item.vote_average}</p>\n                  </div>\n                </div>\n                <p className=\"movie-card-title\">{item.title}</p>\n              </Link>\n            </div>\n          );\n        }\n        return null;\n      });\n    }\n    return null;\n  };\n  return renderCard(props.items);\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}