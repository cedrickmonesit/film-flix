{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/carousel/ImageCarousel.js\";\nimport React from \"react\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport { Link } from \"react-router-dom\";\nimport \"./imageCarousel.scss\";\nimport renderMovieGenres from \"../renderMovieGenres\"; //reusable function\n\nclass ImageCarousel extends React.Component {\n  //renders imagecarousel with movies values\n  renderMovies() {\n    //loops through movies foreach movie returns jsx\n    return this.props.movies.map(movie => {\n      return React.createElement(\"div\", {\n        key: movie.id,\n        className: \"img-slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/details/movie/${movie.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img-slide-image\",\n        style: {\n          background: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img-slide-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"img-slide__category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"h2\", {\n        className: \"img-slide__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \" \", movie.title), React.createElement(\"p\", {\n        className: \"img-slide__genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, renderMovieGenres(movie.genre_ids, this.props.genres))))));\n    });\n  } //renders imagecarousel with shows values\n\n\n  renderShows() {\n    //loops through movies foreach show returns jsx\n    return this.props.shows.map(show => {\n      return React.createElement(\"div\", {\n        key: show.id,\n        className: \"img-slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/details/movie/${show.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img-slide-image\",\n        style: {\n          background: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(http://image.tmdb.org/t/p/original/${show.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img-slide-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"img-slide__category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"h2\", {\n        className: \"img-slide__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" \", show.name), React.createElement(\"p\", {\n        className: \"img-slide__genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, renderMovieGenres(show.genre_ids, this.props.genres))))));\n    });\n  }\n\n  render() {\n    //settings for carousel\n    const settings = {\n      autoPlay: 5000,\n      slidesPerPage: 1,\n      slidesPerScroll: 1,\n      infinite: true,\n      animationSpeed: 500,\n      arrows: false\n    }; //conditional that determines which one is truthy to show the jsx\n\n    if (this.props.movies) {\n      return React.createElement(Carousel, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), this.renderMovies());\n    } else if (this.props.shows) {\n      return React.createElement(Carousel, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.renderShows());\n    }\n\n    return null;\n  }\n\n}\n\nexport default ImageCarousel;","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/carousel/ImageCarousel.js"],"names":["React","Carousel","Link","renderMovieGenres","ImageCarousel","Component","renderMovies","props","movies","map","movie","id","background","backdrop_path","title","genre_ids","genres","renderShows","shows","show","name","render","settings","autoPlay","slidesPerPage","slidesPerScroll","infinite","animationSpeed","arrows"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./imageCarousel.scss\";\nimport renderMovieGenres from \"../renderMovieGenres\"; //reusable function\n\nclass ImageCarousel extends React.Component {\n  //renders imagecarousel with movies values\n  renderMovies() {\n    //loops through movies foreach movie returns jsx\n    return this.props.movies.map(movie => {\n      return (\n        <div key={movie.id} className=\"img-slide\">\n          <Link to={`/details/movie/${movie.id}`}>\n            <div\n              className=\"img-slide-image\"\n              style={{\n                background: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n              }}\n            >\n              <div className=\"img-slide-details\">\n                <p className=\"img-slide__category\">{this.props.title}</p>\n                <h2 className=\"img-slide__title\"> {movie.title}</h2>\n                <p className=\"img-slide__genre\">\n                  {renderMovieGenres(movie.genre_ids, this.props.genres)}\n                </p>\n              </div>\n            </div>\n          </Link>\n        </div>\n      );\n    });\n  }\n\n  //renders imagecarousel with shows values\n  renderShows() {\n    //loops through movies foreach show returns jsx\n    return this.props.shows.map(show => {\n      return (\n        <div key={show.id} className=\"img-slide\">\n          <Link to={`/details/movie/${show.id}`}>\n            <div\n              className=\"img-slide-image\"\n              style={{\n                background: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(http://image.tmdb.org/t/p/original/${show.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n              }}\n            >\n              <div className=\"img-slide-details\">\n                <p className=\"img-slide__category\">{this.props.title}</p>\n                <h2 className=\"img-slide__title\"> {show.name}</h2>\n                <p className=\"img-slide__genre\">\n                  {renderMovieGenres(show.genre_ids, this.props.genres)}\n                </p>\n              </div>\n            </div>\n          </Link>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    //settings for carousel\n    const settings = {\n      autoPlay: 5000,\n      slidesPerPage: 1,\n      slidesPerScroll: 1,\n      infinite: true,\n      animationSpeed: 500,\n      arrows: false,\n    };\n\n    //conditional that determines which one is truthy to show the jsx\n    if (this.props.movies) {\n      return <Carousel {...settings}>{this.renderMovies()}</Carousel>;\n    } else if (this.props.shows) {\n      return <Carousel {...settings}>{this.renderShows()}</Carousel>;\n    }\n    return null;\n  }\n}\n\nexport default ImageCarousel;\n"]},"metadata":{},"sourceType":"module"}