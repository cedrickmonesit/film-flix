{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/actorDetails/ActorDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchActor } from \"../../actions\";\nimport \"./actorDetails.scss\";\n\nclass ActorDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDetails = () => {\n      return React.createElement(\"div\", {\n        className: \"actor-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"actor-details-header\",\n        style: {\n          background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), rgb(255, 255, 255)`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actor-details-header-info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"actor-details-poster\",\n        src: `http://image.tmdb.org/t/p/w500/${this.props.actor.profile_path}`,\n        alt: this.props.actor.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"actor-details-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.actor.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderGender(), \" |\", this.renderJob()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.renderBirthday(this.props.actor.birthday)), React.createElement(\"p\", {\n        className: \"actor-details-summary-genres\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.props.actor.place_of_birth)))), React.createElement(\"main\", {\n        className: \"actor-details-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actor-details-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Biography\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.actor.biography))));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchActor(id);\n    console.log(id);\n  } //birthday date filtering from year-month-day to month/day/year and age\n\n\n  renderBirthday(birthday) {\n    if (birthday) {\n      const date = birthday.split(\"-\");\n      const year = date[0];\n      const month = date[1];\n      const day = date[2];\n      const age = new Date().getFullYear() - year;\n      return `${month}/${day}/${year} | ${age} yo`;\n    }\n\n    return null;\n  }\n\n  renderGender(gender) {\n    const male = 2;\n    const female = 1;\n\n    if (gender === male) {\n      return \"Male\";\n    } else if (gender === female) {\n      return \"Female\";\n    }\n  }\n\n  renderJob() {}\n\n  render() {\n    console.log(this.props.actor, \"actor\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderDetails());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    actor: state.actorData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActor\n})(ActorDetails);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/actorDetails/ActorDetails.js"],"names":["React","connect","fetchActor","ActorDetails","Component","renderDetails","background","props","actor","profile_path","title","name","renderGender","renderJob","renderBirthday","birthday","place_of_birth","biography","componentDidMount","fetchData","id","match","params","console","log","date","split","year","month","day","age","Date","getFullYear","gender","male","female","render","mapStateToProps","state","actorData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchActor } from \"../../actions\";\nimport \"./actorDetails.scss\";\n\nclass ActorDetails extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchActor(id);\n    console.log(id);\n  }\n\n  //birthday date filtering from year-month-day to month/day/year and age\n  renderBirthday(birthday) {\n    if (birthday) {\n      const date = birthday.split(\"-\");\n      const year = date[0];\n      const month = date[1];\n      const day = date[2];\n      const age = new Date().getFullYear() - year;\n      return `${month}/${day}/${year} | ${age} yo`;\n    }\n    return null;\n  }\n\n  renderGender(gender) {\n    const male = 2;\n    const female = 1;\n    if (gender === male) {\n      return \"Male\";\n    } else if (gender === female) {\n      return \"Female\";\n    }\n  }\n\n  renderJob() {}\n\n  renderDetails = () => {\n    return (\n      <div className=\"actor-details\">\n        <header\n          className=\"actor-details-header\"\n          style={{\n            background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), rgb(255, 255, 255)`,\n          }}\n        >\n          <div className=\"actor-details-header-info-container\">\n            <img\n              className=\"actor-details-poster\"\n              src={`http://image.tmdb.org/t/p/w500/${this.props.actor.profile_path}`}\n              alt={this.props.actor.title}\n            />\n            <div className=\"actor-details-title\">\n              <h1>{this.props.actor.name}</h1>\n              <p>\n                {this.renderGender()} |{this.renderJob()}\n              </p>\n              <p>{this.renderBirthday(this.props.actor.birthday)}</p>\n              <p className=\"actor-details-summary-genres\">\n                {this.props.actor.place_of_birth}\n              </p>\n            </div>\n          </div>\n        </header>\n        <main className=\"actor-details-main\">\n          <div className=\"actor-details-summary\">\n            <h2>Biography</h2>\n            <p>{this.props.actor.biography}</p>\n          </div>\n        </main>\n      </div>\n    );\n  };\n\n  render() {\n    console.log(this.props.actor, \"actor\");\n    return <React.Fragment>{this.renderDetails()}</React.Fragment>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    actor: state.actorData,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActor,\n})(ActorDetails);\n"]},"metadata":{},"sourceType":"module"}