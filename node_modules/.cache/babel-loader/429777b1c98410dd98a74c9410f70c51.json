{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-template/src/components/MovieList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass MovieList extends React.Component {\n  //TODO: on search submit fetch movies with search term\n\n  /*componentDidMount() {\n    this.props.fetchMovies(this.props.searchTerm); \n    //use action creator\n  }*/\n  renderImage(movie) {\n    if (movie.poster_path) {\n      return `http://image.tmdb.org/t/p/w185/${movie.poster_path}`;\n    }\n\n    return \"https://in.bmscdn.com/iedb/movies/images/website/poster/large/ela-cheppanu-et00016781-24-03-2017-18-31-40.jpg\";\n  } //used for logic to render in render()\n  //Having multiple posts auto generated\n\n\n  renderList() {\n    if (this.props.movies) {\n      return this.props.movies.map(movie => {\n        return React.createElement(React.Fragment, {\n          key: movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: this.renderImage(movie),\n          alt: movie.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, movie.title));\n      });\n    }\n\n    return \"...loading\";\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderList()); //render posts\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movieData.results\n  }; //this is setting what you want to call the data from the api just to use the data\n};\n\nexport default connect(mapStateToProps)(MovieList);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-template/src/components/MovieList.js"],"names":["React","connect","MovieList","Component","renderImage","movie","poster_path","renderList","props","movies","map","id","title","render","console","log","mapStateToProps","state","movieData","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtC;;AACA;;;;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIA,KAAK,CAACC,WAAV,EAAuB;AACrB,aAAQ,kCAAiCD,KAAK,CAACC,WAAY,EAA3D;AACD;;AACD,WAAO,+GAAP;AACD,GAZqC,CActC;AACA;;;AACAC,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,aAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsBL,KAAK,IAAI;AACpC,eACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAEA,KAAK,CAACM,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAE,KAAKP,WAAL,CAAiBC,KAAjB,CAAV;AAAmC,UAAA,GAAG,EAAEA,KAAK,CAACO,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIP,KAAK,CAACO,KAAV,CAFF,CADF;AAMD,OAPM,CAAP;AAQD;;AACD,WAAO,YAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,UAAL,EAAN,CAAP,CAFO,CAEgC;AACxC;;AAjCqC;;AAoCxC,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAER,IAAAA,MAAM,EAAEQ,KAAK,CAACC,SAAN,CAAgBC;AAA1B,GAAP,CAD+B,CAE/B;AACD,CAHD;;AAKA,eAAelB,OAAO,CAACe,eAAD,CAAP,CAAyBd,SAAzB,CAAf","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nclass MovieList extends React.Component {\n  //TODO: on search submit fetch movies with search term\n  /*componentDidMount() {\n    this.props.fetchMovies(this.props.searchTerm); \n    //use action creator\n  }*/\n\n  renderImage(movie) {\n    if (movie.poster_path) {\n      return `http://image.tmdb.org/t/p/w185/${movie.poster_path}`;\n    }\n    return \"https://in.bmscdn.com/iedb/movies/images/website/poster/large/ela-cheppanu-et00016781-24-03-2017-18-31-40.jpg\";\n  }\n\n  //used for logic to render in render()\n  //Having multiple posts auto generated\n  renderList() {\n    if (this.props.movies) {\n      return this.props.movies.map(movie => {\n        return (\n          <React.Fragment key={movie.id}>\n            <img src={this.renderImage(movie)} alt={movie.title} />\n            <p>{movie.title}</p>\n          </React.Fragment>\n        );\n      });\n    }\n    return \"...loading\";\n  }\n\n  render() {\n    console.log(this.props);\n    return <div>{this.renderList()}</div>; //render posts\n  }\n}\n\nconst mapStateToProps = state => {\n  return { movies: state.movieData.results };\n  //this is setting what you want to call the data from the api just to use the data\n};\n\nexport default connect(mapStateToProps)(MovieList);\n"]},"metadata":{},"sourceType":"module"}