{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Documents/GitHub/film-flix-client/src/components/searchresults/SearchResults.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../../actions\";\nimport MovieList from \"../list/List\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.searchterm !== this.props.match.params.searchterm) {\n      this.fetchData();\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchMovies(this.props.match.params.searchterm);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.searchterm;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-search-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Search Results For \", this.renderSearchTerm()), /*#__PURE__*/React.createElement(MovieList, {\n      items: this.props.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} //filter data from redux store to use in the component as a prop\n\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movieData.results\n  };\n}; //connect function from react-redux to access redux store and dispatch actions\n\n\nexport default connect(mapStateToProps, {\n  fetchMovies\n})(MovieCard);","map":{"version":3,"names":["React","connect","fetchMovies","MovieList","MovieCard","Component","componentDidMount","fetchData","componentDidUpdate","prevProps","match","params","searchterm","props","window","scrollTo","renderSearchTerm","render","movies","mapStateToProps","state","movieData","results"],"sources":["/Users/cedrickmonesit/Documents/GitHub/film-flix-client/src/components/searchresults/SearchResults.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovies } from \"../../actions\";\nimport MovieList from \"../list/List\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.match.params.searchterm !== this.props.match.params.searchterm\n    ) {\n      this.fetchData();\n    }\n    window.scrollTo(0, 0);\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchMovies(this.props.match.params.searchterm);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.searchterm;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main-search-results\">\n        <h1>Search Results For {this.renderSearchTerm()}</h1>\n        <MovieList items={this.props.movies} />\n      </div>\n    );\n  }\n}\n\n//filter data from redux store to use in the component as a prop\nconst mapStateToProps = (state) => {\n  return { movies: state.movieData.results };\n};\n\n//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps, { fetchMovies })(MovieCard);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,sBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;EACtCC,iBAAiB,GAAG;IAClB,KAAKC,SAAL;EACD;;EAEDC,kBAAkB,CAACC,SAAD,EAAY;IAC5B,IACEA,SAAS,CAACC,KAAV,CAAgBC,MAAhB,CAAuBC,UAAvB,KAAsC,KAAKC,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UADhE,EAEE;MACA,KAAKL,SAAL;IACD;;IACDO,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;EACD;;EAEDR,SAAS,GAAG;IACV;IACA,IAAI,KAAKM,KAAL,CAAWH,KAAf,EAAsB;MACpB,KAAKG,KAAL,CAAWX,WAAX,CAAuB,KAAKW,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/C;IACD;EACF;;EAEDI,gBAAgB,GAAG;IACjB,IAAI,KAAKH,KAAL,CAAWH,KAAf,EAAsB;MACpB,OAAO,KAAKG,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/B;IACD;EACF;;EAEDK,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,qBAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,0BAAwB,KAAKD,gBAAL,EAAxB,CADF,eAEE,oBAAC,SAAD;MAAW,KAAK,EAAE,KAAKH,KAAL,CAAWK,MAA7B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFF,CADF;EAMD;;AAlCqC,C,CAqCxC;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IAAEF,MAAM,EAAEE,KAAK,CAACC,SAAN,CAAgBC;EAA1B,CAAP;AACD,CAFD,C,CAIA;;;AACA,eAAerB,OAAO,CAACkB,eAAD,EAAkB;EAAEjB;AAAF,CAAlB,CAAP,CAA0CE,SAA1C,CAAf"},"metadata":{},"sourceType":"module"}