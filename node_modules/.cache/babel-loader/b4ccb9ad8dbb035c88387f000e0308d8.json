{"ast":null,"code":"import _classCallCheck from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import\"../login/login.scss\";import ImageCarousel from\"../carousel/ImageCarousel\";import\"../carousel/imageCarousel.scss\";import{fetchNowPlaying,fetchGenres,deleteSignOutSession,fetchAccountDetails}from\"../../actions\";import history from\"../../history\";import Loader from\"../loader/Loader\";//login page\nvar Account=/*#__PURE__*/function(_React$Component){_inherits(Account,_React$Component);function Account(){var _getPrototypeOf2;var _this;_classCallCheck(this,Account);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Account)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.onClickDeleteSession=function(){//using the token create a user session\n_this.props.deleteSignOutSession();history.push(\"/user/signin\");};return _this;}_createClass(Account,[{key:\"componentDidMount\",//need to fetch the data of genres and nowplaying movies\nvalue:function componentDidMount(){this.props.fetchNowPlaying();this.props.fetchGenres();this.props.fetchAccountDetails();}},{key:\"renderAccount\",value:function renderAccount(){if(this.props.account.id){return React.createElement(\"div\",{className:\"main-signin\"},React.createElement(\"div\",{className:\"main-signin-container\"},React.createElement(\"header\",{className:\"main-signin-header\"},React.createElement(\"img\",{className:\"main-signin-word-logo\",src:\"https://s.gravatar.com/avatar/\".concat(this.props.account.avatar.gravatar.hash,\"?s=600\\n\\n            \"),alt:\"User Profile Logo\"}),React.createElement(\"h1\",null,this.props.account.username),React.createElement(\"p\",null,this.props.account.name)),React.createElement(\"div\",{className:\"main-signin-buttons\"},React.createElement(\"div\",{className:\"main-signin-content main-approval-content\"},React.createElement(\"p\",null,\"You must approve this site for authorization if you have denied authorization to this site on TMDB, your sign in will not work!\")),React.createElement(\"button\",{className:\"main-signin-button\",onClick:this.onClickDeleteSession},\"Sign Out\"))),React.createElement(\"div\",{className:\"main-signin-image-carousel\"},React.createElement(ImageCarousel,{movies:this.props.nowPlaying,genres:this.props.genres,title:\"Now Playing\"})));}return React.createElement(Loader,null);}//login is reusing the imagecarousel component resized\n},{key:\"render\",value:function render(){return this.renderAccount();}}]);return Account;}(React.Component);//getting the nowplaying movies and genres for each movie\nvar mapStateToProps=function mapStateToProps(state){return{nowPlaying:state.nowPlayingData.results,genres:state.genresData.genres,status:state.signOutSession.status_message,account:state.accountDetails};};export default connect(mapStateToProps,{fetchNowPlaying:fetchNowPlaying,fetchGenres:fetchGenres,deleteSignOutSession:deleteSignOutSession,fetchAccountDetails:fetchAccountDetails})(Account);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/account/Account.js"],"names":["React","connect","ImageCarousel","fetchNowPlaying","fetchGenres","deleteSignOutSession","fetchAccountDetails","history","Loader","Account","onClickDeleteSession","props","push","account","id","avatar","gravatar","hash","username","name","nowPlaying","genres","renderAccount","Component","mapStateToProps","state","nowPlayingData","results","genresData","status","signOutSession","status_message","accountDetails"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,qBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,2BAA1B,CACA,MAAO,gCAAP,CACA,OACEC,eADF,CAEEC,WAFF,CAGEC,oBAHF,CAIEC,mBAJF,KAKO,eALP,CAMA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAEA;GACMC,CAAAA,O,+YAQJC,oB,CAAuB,UAAM,CAC3B;AACA,MAAKC,KAAL,CAAWN,oBAAX,GACAE,OAAO,CAACK,IAAR,CAAa,cAAb,EACD,C,8DAXD;kCACoB,CAClB,KAAKD,KAAL,CAAWR,eAAX,GACA,KAAKQ,KAAL,CAAWP,WAAX,GACA,KAAKO,KAAL,CAAWL,mBAAX,GACD,C,qDAQe,CACd,GAAI,KAAKK,KAAL,CAAWE,OAAX,CAAmBC,EAAvB,CAA2B,CACzB,MACE,4BAAK,SAAS,CAAC,aAAf,EACE,2BAAK,SAAS,CAAC,uBAAf,EACE,8BAAQ,SAAS,CAAC,oBAAlB,EACE,2BACE,SAAS,CAAC,uBADZ,CAEE,GAAG,yCAAmC,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,MAAnB,CAA0BC,QAA1B,CAAmCC,IAAtE,0BAFL,CAKE,GAAG,CAAC,mBALN,EADF,CAQE,8BAAK,KAAKN,KAAL,CAAWE,OAAX,CAAmBK,QAAxB,CARF,CASE,6BAAI,KAAKP,KAAL,CAAWE,OAAX,CAAmBM,IAAvB,CATF,CADF,CAYE,2BAAK,SAAS,CAAC,qBAAf,EACE,2BAAK,SAAS,CAAC,2CAAf,EACE,+JADF,CADF,CAQE,8BACE,SAAS,CAAC,oBADZ,CAEE,OAAO,CAAE,KAAKT,oBAFhB,aARF,CAZF,CADF,CA8BE,2BAAK,SAAS,CAAC,4BAAf,EACE,oBAAC,aAAD,EACE,MAAM,CAAE,KAAKC,KAAL,CAAWS,UADrB,CAEE,MAAM,CAAE,KAAKT,KAAL,CAAWU,MAFrB,CAGE,KAAK,CAAC,aAHR,EADF,CA9BF,CADF,CAwCD,CACD,MAAO,qBAAC,MAAD,MAAP,CACD,CAED;uCACS,CACP,MAAO,MAAKC,aAAL,EAAP,CACD,C,qBA/DmBtB,KAAK,CAACuB,S,EAkE5B;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLL,UAAU,CAAEK,KAAK,CAACC,cAAN,CAAqBC,OAD5B,CAELN,MAAM,CAAEI,KAAK,CAACG,UAAN,CAAiBP,MAFpB,CAGLQ,MAAM,CAAEJ,KAAK,CAACK,cAAN,CAAqBC,cAHxB,CAILlB,OAAO,CAAEY,KAAK,CAACO,cAJV,CAAP,CAMD,CAPD,CASA,cAAe/B,CAAAA,OAAO,CAACuB,eAAD,CAAkB,CACtCrB,eAAe,CAAfA,eADsC,CAEtCC,WAAW,CAAXA,WAFsC,CAGtCC,oBAAoB,CAApBA,oBAHsC,CAItCC,mBAAmB,CAAnBA,mBAJsC,CAAlB,CAAP,CAKZG,OALY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"../login/login.scss\";\nimport ImageCarousel from \"../carousel/ImageCarousel\";\nimport \"../carousel/imageCarousel.scss\";\nimport {\n  fetchNowPlaying,\n  fetchGenres,\n  deleteSignOutSession,\n  fetchAccountDetails,\n} from \"../../actions\";\nimport history from \"../../history\";\nimport Loader from \"../loader/Loader\";\n\n//login page\nclass Account extends React.Component {\n  //need to fetch the data of genres and nowplaying movies\n  componentDidMount() {\n    this.props.fetchNowPlaying();\n    this.props.fetchGenres();\n    this.props.fetchAccountDetails();\n  }\n\n  onClickDeleteSession = () => {\n    //using the token create a user session\n    this.props.deleteSignOutSession();\n    history.push(\"/user/signin\");\n  };\n\n  renderAccount() {\n    if (this.props.account.id) {\n      return (\n        <div className=\"main-signin\">\n          <div className=\"main-signin-container\">\n            <header className=\"main-signin-header\">\n              <img\n                className=\"main-signin-word-logo\"\n                src={`https://s.gravatar.com/avatar/${this.props.account.avatar.gravatar.hash}?s=600\n\n            `}\n                alt=\"User Profile Logo\"\n              />\n              <h1>{this.props.account.username}</h1>\n              <p>{this.props.account.name}</p>\n            </header>\n            <div className=\"main-signin-buttons\">\n              <div className=\"main-signin-content main-approval-content\">\n                <p>\n                  You must approve this site for authorization if you have\n                  denied authorization to this site on TMDB, your sign in will\n                  not work!\n                </p>\n              </div>\n              <button\n                className=\"main-signin-button\"\n                onClick={this.onClickDeleteSession}\n              >\n                Sign Out\n              </button>\n            </div>\n          </div>\n\n          <div className=\"main-signin-image-carousel\">\n            <ImageCarousel\n              movies={this.props.nowPlaying}\n              genres={this.props.genres}\n              title=\"Now Playing\"\n            />\n          </div>\n        </div>\n      );\n    }\n    return <Loader />;\n  }\n\n  //login is reusing the imagecarousel component resized\n  render() {\n    return this.renderAccount();\n  }\n}\n\n//getting the nowplaying movies and genres for each movie\nconst mapStateToProps = (state) => {\n  return {\n    nowPlaying: state.nowPlayingData.results,\n    genres: state.genresData.genres,\n    status: state.signOutSession.status_message,\n    account: state.accountDetails,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchNowPlaying,\n  fetchGenres,\n  deleteSignOutSession,\n  fetchAccountDetails,\n})(Account);\n"]},"metadata":{},"sourceType":"module"}