{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/moviecard/MovieCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\nimport { fetchMovies } from \"../../actions\";\nimport \"./movieCard.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    if (this.props.searchTerm) {\n      this.props.fetchMovies(this.props.searchTerm);\n    }\n  }\n\n  renderCard(movies) {\n    //if movies from api hasn't been loaded will render nothing, prevents error\n    if (movies) {\n      //loop through movies foreach movie return jsx\n      return movies.map(movie => {\n        if (movie.poster_path) {\n          return React.createElement(\"div\", {\n            key: movie.id,\n            className: \"movie-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: `/details/movie/${movie.id}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"movie-card-image-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"movie-card-image\",\n            src: `http://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n            alt: movie.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"movie-card-rating \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(FaStar, {\n            className: \"movie-card-star-rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, movie.vote_average))), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, movie.title)));\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return this.renderCard(this.props.movies);\n  }\n\n}\n\nexport default MovieCard;","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/moviecard/MovieCard.js"],"names":["React","connect","Link","FaStar","fetchMovies","MovieCard","Component","componentDidMount","fetchData","props","searchTerm","renderCard","movies","map","movie","poster_path","id","title","vote_average","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,WAAKD,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,UAAlC;AACD;AACF;;AAEDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB;AACA,QAAIA,MAAJ,EAAY;AACV;AACA,aAAOA,MAAM,CAACC,GAAP,CAAWC,KAAK,IAAI;AACzB,YAAIA,KAAK,CAACC,WAAV,EAAuB;AACrB,iBACE;AAAK,YAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAoB,YAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAG,kBAAiBF,KAAK,CAACE,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,GAAG,EAAG,kCAAiCF,KAAK,CAACC,WAAY,EAF3D;AAGE,YAAA,GAAG,EAAED,KAAK,CAACG,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAME;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIH,KAAK,CAACI,YAAV,CAFF,CANF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIJ,KAAK,CAACG,KAAV,CAZF,CADF,CADF;AAkBD;;AACD,eAAO,IAAP;AACD,OAtBM,CAAP;AAuBD;;AACD,WAAO,IAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKR,UAAL,CAAgB,KAAKF,KAAL,CAAWG,MAA3B,CAAP;AACD;;AA5CqC;;AA+CxC,eAAeP,SAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\n\nimport { fetchMovies } from \"../../actions\";\nimport \"./movieCard.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    if (this.props.searchTerm) {\n      this.props.fetchMovies(this.props.searchTerm);\n    }\n  }\n\n  renderCard(movies) {\n    //if movies from api hasn't been loaded will render nothing, prevents error\n    if (movies) {\n      //loop through movies foreach movie return jsx\n      return movies.map(movie => {\n        if (movie.poster_path) {\n          return (\n            <div key={movie.id} className=\"movie-card\">\n              <Link to={`/details/movie/${movie.id}`}>\n                <div className=\"movie-card-image-container\">\n                  <img\n                    className=\"movie-card-image\"\n                    src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.title}\n                  />\n                  <div className=\"movie-card-rating \">\n                    <FaStar className=\"movie-card-star-rating\" />\n                    <p>{movie.vote_average}</p>\n                  </div>\n                </div>\n                <p>{movie.title}</p>\n              </Link>\n            </div>\n          );\n        }\n        return null;\n      });\n    }\n    return null;\n  }\n\n  render() {\n    return this.renderCard(this.props.movies);\n  }\n}\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}