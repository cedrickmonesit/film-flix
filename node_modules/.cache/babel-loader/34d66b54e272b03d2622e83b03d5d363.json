{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/MovieDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovieDetails } from \"../actions\"; //reference MovieList Component, for the props being used\n\nclass MovieDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDetails = () => {\n      if (this.props.movie) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: `https://image.tmdb.org/t/p/original/${this.props.movie.backdrop_path}`,\n          alt: this.props.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, this.props.movie.title));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMovieDetails(this.props.match.params.id);\n    console.log(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" \", this.renderDetails());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movieDetails\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovieDetails\n})(MovieDetails);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/MovieDetails.js"],"names":["React","connect","fetchMovieDetails","MovieDetails","Component","renderDetails","props","movie","backdrop_path","title","componentDidMount","match","params","id","console","log","render","mapStateToProps","state","movieDetails"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,YAAlC,C,CAEA;;AACA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMzB,MAAM;AACpB,UAAI,KAAKC,KAAL,CAAWC,KAAf,EAAsB;AACpB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,GAAG,EAAG,uCAAsC,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,aAAc,EAD7E;AAEE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAAtB,CALF,CADF;AASD;AACF,KAlBwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWJ,iBAAX,CAA6B,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAArD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKD,aAAL,EAAP,CAAP;AACD;;AAvBwC;;AA0B3C,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEX,IAAAA,KAAK,EAAEW,KAAK,CAACC;AAAf,GAAP;AACD,CAFD;;AAIA,eAAelB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,YAAhD,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovieDetails } from \"../actions\";\n\n//reference MovieList Component, for the props being used\nclass MovieDetails extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovieDetails(this.props.match.params.id);\n    console.log(this.props.match.params.id);\n  }\n\n  renderDetails = () => {\n    if (this.props.movie) {\n      return (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/original/${this.props.movie.backdrop_path}`}\n            alt={this.props.title}\n          />\n          <h1>{this.props.movie.title}</h1>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    console.log(this.props);\n    return <div> {this.renderDetails()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { movie: state.movieDetails };\n};\n\nexport default connect(mapStateToProps, { fetchMovieDetails })(MovieDetails);\n"]},"metadata":{},"sourceType":"module"}