{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-template/src/components/MovieList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions\";\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovies(\"iron man\"); //use action creator\n  }\n\n  renderImage(movie) {\n    if (movie.poster_path) {}\n  } //used for logic to render in render()\n  //Having multiple posts auto generated\n\n\n  renderList() {\n    if (this.props.movies) {\n      return this.props.movies.map(movie => {\n        return React.createElement(React.Fragment, {\n          key: movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: `http://image.tmdb.org/t/p/w185/${renderImage(movie)}`,\n          alt: movie.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }), \";\", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, movie.title));\n      });\n    }\n\n    return \"...loading\";\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderList()); //render posts\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movieData.results\n  }; //this is setting what you want to call the data from the api just to use the data\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovies\n})(MovieList);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-template/src/components/MovieList.js"],"names":["React","connect","fetchMovies","MovieList","Component","componentDidMount","props","renderImage","movie","poster_path","renderList","movies","map","id","title","render","console","log","mapStateToProps","state","movieData","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,UAAvB,EADkB,CACkB;AACrC;;AAEDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIA,KAAK,CAACC,WAAV,EAAuB,CACtB;AACF,GARqC,CAUtC;AACA;;;AACAC,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKJ,KAAL,CAAWK,MAAf,EAAuB;AACrB,aAAO,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAsBJ,KAAK,IAAI;AACpC,eACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAEA,KAAK,CAACK,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,GAAG,EAAG,kCAAiCN,WAAW,CAACC,KAAD,CAAQ,EAD5D;AAEE,UAAA,GAAG,EAAEA,KAAK,CAACM,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,OAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,KAAK,CAACM,KAAV,CALH,CADF;AASD,OAVM,CAAP;AAWD;;AACD,WAAO,YAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKI,UAAL,EAAN,CAAP,CAFO,CAEgC;AACxC;;AAhCqC;;AAmCxC,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAER,IAAAA,MAAM,EAAEQ,KAAK,CAACC,SAAN,CAAgBC;AAA1B,GAAP,CAD+B,CAE/B;AACD,CAHD;;AAKA,eAAepB,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,SAA1C,CAAf","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions\";\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovies(\"iron man\"); //use action creator\n  }\n\n  renderImage(movie) {\n    if (movie.poster_path) {\n    }\n  }\n\n  //used for logic to render in render()\n  //Having multiple posts auto generated\n  renderList() {\n    if (this.props.movies) {\n      return this.props.movies.map(movie => {\n        return (\n          <React.Fragment key={movie.id}>\n            <img\n              src={`http://image.tmdb.org/t/p/w185/${renderImage(movie)}`}\n              alt={movie.title}\n            />\n            ;<p>{movie.title}</p>\n          </React.Fragment>\n        );\n      });\n    }\n    return \"...loading\";\n  }\n\n  render() {\n    console.log(this.props);\n    return <div>{this.renderList()}</div>; //render posts\n  }\n}\n\nconst mapStateToProps = state => {\n  return { movies: state.movieData.results };\n  //this is setting what you want to call the data from the api just to use the data\n};\n\nexport default connect(mapStateToProps, { fetchMovies })(MovieList);\n"]},"metadata":{},"sourceType":"module"}