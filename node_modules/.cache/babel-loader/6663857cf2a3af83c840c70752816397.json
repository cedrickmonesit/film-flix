{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-template/src/components/MovieList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions\";\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovies(\"iron man\"); //use action creator\n  } //used for logic to render in render()\n  //Having multiple posts auto generated\n\n\n  renderList() {\n    if (this.props.movies) {\n      return this.props.movies.map(movie => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: `http://image.tmdb.org/t/p/w185/${movie.poster_path}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          key: movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, movie.title));\n      });\n    }\n\n    return \"...loading\";\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.renderList()); //render posts\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movieData.results\n  }; //this is setting what you want to call the data from the api just to use the data\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovies\n})(MovieList);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-template/src/components/MovieList.js"],"names":["React","connect","fetchMovies","MovieList","Component","componentDidMount","props","renderList","movies","map","movie","poster_path","id","title","render","console","log","mapStateToProps","state","movieData","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,UAAvB,EADkB,CACkB;AACrC,GAHqC,CAKtC;AACA;;;AACAK,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKD,KAAL,CAAWE,MAAf,EAAuB;AACrB,aAAO,KAAKF,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IAAI;AACpC,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAG,kCAAiCA,KAAK,CAACC,WAAY,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAG,UAAA,GAAG,EAAED,KAAK,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBF,KAAK,CAACG,KAAzB,CAFF,CADF;AAMD,OAPM,CAAP;AAQD;;AACD,WAAO,YAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,UAAL,EAAN,CAAP,CAFO,CAEgC;AACxC;;AAxBqC;;AA2BxC,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEV,IAAAA,MAAM,EAAEU,KAAK,CAACC,SAAN,CAAgBC;AAA1B,GAAP,CAD+B,CAE/B;AACD,CAHD;;AAKA,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,SAA1C,CAAf","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions\";\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovies(\"iron man\"); //use action creator\n  }\n\n  //used for logic to render in render()\n  //Having multiple posts auto generated\n  renderList() {\n    if (this.props.movies) {\n      return this.props.movies.map(movie => {\n        return (\n          <React.Fragment>\n            <img src={`http://image.tmdb.org/t/p/w185/${movie.poster_path}`} />\n            <p key={movie.id}>{movie.title}</p>\n          </React.Fragment>\n        );\n      });\n    }\n    return \"...loading\";\n  }\n\n  render() {\n    console.log(this.props);\n    return <div>{this.renderList()}</div>; //render posts\n  }\n}\n\nconst mapStateToProps = state => {\n  return { movies: state.movieData.results };\n  //this is setting what you want to call the data from the api just to use the data\n};\n\nexport default connect(mapStateToProps, { fetchMovies })(MovieList);\n"]},"metadata":{},"sourceType":"module"}