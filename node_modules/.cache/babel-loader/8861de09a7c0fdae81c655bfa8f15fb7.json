{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/actorDetails/actorDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchActor } from \"../../actions\";\nimport \"./actorDetails.scss\";\n\nclass ActorDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDetails = () => {\n      return React.createElement(\"div\", {\n        className: \"actor-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"actor-details-header\",\n        style: {\n          background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.movie.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actor-details-header-info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"actor-details-poster\",\n        src: `http://image.tmdb.org/t/p/w500/${this.props.actor.poster_path}`,\n        alt: this.props.actor.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"actor-details-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"title\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, `${this.props.actor.status} | ${this.renderDate(this.props.actor.release_date)} |\n                  ${this.props.actor.original_language}`), React.createElement(\"p\", {\n        className: \"actor-details-summary-genres\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"paragraph\")))), React.createElement(\"main\", {\n        className: \"actor-details-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actor-details-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Summary\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"overview\")), this.renderTrailers(this.props.trailers), this.renderCredits(this.props.credits), this.renderSimilarMovies(this.props.similarMovies)));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchActor(id);\n    console.log(id);\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    actor: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActor\n})(ActorDetails);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/actorDetails/actorDetails.js"],"names":["React","connect","fetchActor","ActorDetails","Component","renderDetails","background","props","movie","backdrop_path","actor","poster_path","title","status","renderDate","release_date","original_language","renderTrailers","trailers","renderCredits","credits","renderSimilarMovies","similarMovies","componentDidMount","fetchData","id","match","params","console","log","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAWzCC,aAXyC,GAWzB,MAAM;AACpB,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAG,4GAA2G,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,aAAc;AADlJ,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,GAAG,EAAG,kCAAiC,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,WAAY,EAFtE;AAGE,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,KAAX,CAAiBE,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,GAAE,KAAKL,KAAL,CAAWG,KAAX,CAAiBG,MAAO,MAAK,KAAKC,UAAL,CAC/B,KAAKP,KAAL,CAAWG,KAAX,CAAiBK,YADc,CAE/B;oBACE,KAAKR,KAAL,CAAWG,KAAX,CAAiBM,iBAAkB,EAJzC,CAHF,EASE;AAAG,QAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,CANF,CANF,CADF,EA0BE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,EAMG,KAAKC,cAAL,CAAoB,KAAKV,KAAL,CAAWW,QAA/B,CANH,EAQG,KAAKC,aAAL,CAAmB,KAAKZ,KAAL,CAAWa,OAA9B,CARH,EAUG,KAAKC,mBAAL,CAAyB,KAAKd,KAAL,CAAWe,aAApC,CAVH,CA1BF,CADF;AAyCD,KArDwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AACV,UAAMC,EAAE,GAAG,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBC,MAAjB,CAAwBF,EAAnC;AACA,SAAKlB,KAAL,CAAWL,UAAX,CAAsBuB,EAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACD;;AA8CDK,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AA1DwC;;AA6D3C,MAAMwB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLtB,IAAAA,KAAK,EAAEsB;AADF,GAAP;AAGD,CAJD;;AAMA,eAAe/B,OAAO,CAAC8B,eAAD,EAAkB;AACtC7B,EAAAA;AADsC,CAAlB,CAAP,CAEZC,YAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchActor } from \"../../actions\";\nimport \"./actorDetails.scss\";\n\nclass ActorDetails extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchActor(id);\n    console.log(id);\n  }\n\n  renderDetails = () => {\n    return (\n      <div className=\"actor-details\">\n        <header\n          className=\"actor-details-header\"\n          style={{\n            background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.movie.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n          }}\n        >\n          <div className=\"actor-details-header-info-container\">\n            <img\n              className=\"actor-details-poster\"\n              src={`http://image.tmdb.org/t/p/w500/${this.props.actor.poster_path}`}\n              alt={this.props.actor.title}\n            />\n            <div className=\"actor-details-title\">\n              <h1>title</h1>\n\n              <p>\n                {`${this.props.actor.status} | ${this.renderDate(\n                  this.props.actor.release_date,\n                )} |\n                  ${this.props.actor.original_language}`}\n              </p>\n              <p className=\"actor-details-summary-genres\">paragraph</p>\n            </div>\n          </div>\n        </header>\n        <main className=\"actor-details-main\">\n          <div className=\"actor-details-summary\">\n            <h2>Summary</h2>\n            <p>overview</p>\n          </div>\n\n          {this.renderTrailers(this.props.trailers)}\n\n          {this.renderCredits(this.props.credits)}\n\n          {this.renderSimilarMovies(this.props.similarMovies)}\n        </main>\n      </div>\n    );\n  };\n\n  render() {\n    console.log(this.props);\n    return <div> </div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    actor: state,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActor,\n})(ActorDetails);\n"]},"metadata":{},"sourceType":"module"}