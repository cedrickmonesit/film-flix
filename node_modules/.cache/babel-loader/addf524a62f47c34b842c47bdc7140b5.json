{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postFavorite } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\nimport { TiDelete } from \"react-icons/ti\";\nimport history from \"../../history\";\nimport \"./card.scss\"; //you must say if the shows props is true so if you are passing an array of shows shows={true}\n\nclass Card extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isDeletable = isDeletable => {\n      if (isDeletable) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-delete-btn-cover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }), React.createElement(TiDelete, {\n          className: \"card-delete-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.handleCardClickEvent = (event, id) => {\n      if (event.target.classList.contains(\"card-delete-btn-cover\")) {\n        console.log(event.target);\n        console.log(id);\n        this.props.postFavorite(id, \"movie\", false);\n        window.location.reload();\n      } else {\n        history.push(`/details/movie/${id}`);\n      }\n    };\n\n    this.renderCard = items => {\n      //if movies or shows from api hasn't been loaded will render nothing, prevents error\n      if (items) {\n        //loop through movies or shows foreach movie return jsx\n        return items.map(item => {\n          if (this.props.type === \"shows\" || item.media_type === \"tv\") {\n            if (item.poster_path) {\n              return React.createElement(\"div\", {\n                key: item.id,\n                className: \"movie-card\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44\n                },\n                __self: this\n              }, React.createElement(Link, {\n                to: `/details/show/${item.id}`,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 45\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"movie-card-image-container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 46\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                className: \"movie-card-image\",\n                src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n                alt: item.title,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 47\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"movie-card-rating \",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 52\n                },\n                __self: this\n              }, React.createElement(FaStar, {\n                className: \"movie-card-star-rating\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54\n                },\n                __self: this\n              }, item.vote_average))), React.createElement(\"p\", {\n                className: \"movie-card-title\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57\n                },\n                __self: this\n              }, item.name)));\n            }\n          }\n\n          if (item.poster_path) {\n            return React.createElement(\"div\", {\n              key: item.id,\n              className: \"movie-card\",\n              onClickCapture: e => {\n                this.handleCardClickEvent(e, item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"movie-card-image-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"movie-card-image\",\n              src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n              alt: item.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"movie-card-rating \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, React.createElement(FaStar, {\n              className: \"movie-card-star-rating\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            }), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            }, item.vote_average)), this.isDeletable(this.props.isDeletable)), React.createElement(\"p\", {\n              className: \"movie-card-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, item.title));\n          }\n\n          return null;\n        });\n      }\n\n      return null;\n    };\n  }\n\n  render() {\n    return this.renderCard(this.props.items);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.postFavoriteStatus.status_message\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postFavorite\n})(Card);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/card/Card.js"],"names":["React","connect","postFavorite","Link","FaStar","TiDelete","history","Card","Component","isDeletable","handleCardClickEvent","event","id","target","classList","contains","console","log","props","window","location","reload","push","renderCard","items","map","item","type","media_type","poster_path","title","vote_average","name","e","render","mapStateToProps","state","status","postFavoriteStatus","status_message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postFavorite } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport { FaStar } from \"react-icons/fa\";\nimport { TiDelete } from \"react-icons/ti\";\n\nimport history from \"../../history\";\nimport \"./card.scss\";\n\n//you must say if the shows props is true so if you are passing an array of shows shows={true}\nclass Card extends React.Component {\n  isDeletable = (isDeletable) => {\n    if (isDeletable) {\n      return (\n        <React.Fragment>\n          <div className=\"card-delete-btn-cover\"></div>\n          <TiDelete className=\"card-delete-btn\" />\n        </React.Fragment>\n      );\n    }\n  };\n\n  //handle target element for event bubbling\n  handleCardClickEvent = (event, id) => {\n    if (event.target.classList.contains(\"card-delete-btn-cover\")) {\n      console.log(event.target);\n      console.log(id);\n      this.props.postFavorite(id, \"movie\", false);\n      window.location.reload();\n    } else {\n      history.push(`/details/movie/${id}`);\n    }\n  };\n\n  renderCard = (items) => {\n    //if movies or shows from api hasn't been loaded will render nothing, prevents error\n    if (items) {\n      //loop through movies or shows foreach movie return jsx\n      return items.map((item) => {\n        if (this.props.type === \"shows\" || item.media_type === \"tv\") {\n          if (item.poster_path) {\n            return (\n              <div key={item.id} className=\"movie-card\">\n                <Link to={`/details/show/${item.id}`}>\n                  <div className=\"movie-card-image-container\">\n                    <img\n                      className=\"movie-card-image\"\n                      src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                      alt={item.title}\n                    />\n                    <div className=\"movie-card-rating \">\n                      <FaStar className=\"movie-card-star-rating\" />\n                      <p>{item.vote_average}</p>\n                    </div>\n                  </div>\n                  <p className=\"movie-card-title\">{item.name}</p>\n                </Link>\n              </div>\n            );\n          }\n        }\n        if (item.poster_path) {\n          return (\n            <div\n              key={item.id}\n              className=\"movie-card\"\n              onClickCapture={(e) => {\n                this.handleCardClickEvent(e, item.id);\n              }}\n            >\n              {/*<Link to={`/details/movie/${item.id}`}>*/}\n              <div className=\"movie-card-image-container\">\n                <img\n                  className=\"movie-card-image\"\n                  src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                  alt={item.title}\n                />\n                <div className=\"movie-card-rating \">\n                  <FaStar className=\"movie-card-star-rating\" />\n                  <p>{item.vote_average}</p>\n                </div>\n                {this.isDeletable(this.props.isDeletable)}\n              </div>\n              <p className=\"movie-card-title\">{item.title}</p>\n              {/*</Link>*/}\n            </div>\n          );\n        }\n        return null;\n      });\n    }\n    return null;\n  };\n  render() {\n    return this.renderCard(this.props.items);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.postFavoriteStatus.status_message,\n  };\n};\n\nexport default connect(mapStateToProps, { postFavorite })(Card);\n"]},"metadata":{},"sourceType":"module"}