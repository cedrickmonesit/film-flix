{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/moviecard/MovieCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../../actions\";\nimport \"./movieCard.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchMovies(id);\n  }\n\n  renderCard() {\n    //if movies from api hasn't been loaded will render nothing, prevents error\n    if (this.props.movies) {\n      //loop through movies foreach movie return jsx\n      return this.props.movies.map(movie => {\n        if (movie.poster_path) {\n          return React.createElement(\"div\", {\n            key: movie.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"movie-card-image\",\n            src: `http://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n            alt: movie.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, movie.title));\n        }\n\n        return \" \";\n      });\n    }\n\n    return \" \";\n  }\n\n  render() {\n    return this.renderCard();\n  }\n\n} //filter data from redux store to use in the component as a prop\n\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movieData.results\n  };\n}; //connect function from react-redux to access redux store and dispatch actions\n\n\nexport default connect(mapStateToProps, {\n  fetchMovies\n})(MovieCard);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/moviecard/MovieCard.js"],"names":["React","connect","fetchMovies","MovieCard","Component","componentDidMount","id","props","match","params","renderCard","movies","map","movie","poster_path","title","render","mapStateToProps","state","movieData","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC;AACA,SAAKC,KAAL,CAAWL,WAAX,CAAuBI,EAAvB;AACD;;AAEDI,EAAAA,UAAU,GAAG;AACX;AACA,QAAI,KAAKH,KAAL,CAAWI,MAAf,EAAuB;AACrB;AACA,aAAO,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IAAI;AACpC,YAAIA,KAAK,CAACC,WAAV,EAAuB;AACrB,iBACE;AAAK,YAAA,GAAG,EAAED,KAAK,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,GAAG,EAAG,kCAAiCO,KAAK,CAACC,WAAY,EAF3D;AAGE,YAAA,GAAG,EAAED,KAAK,CAACE,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIF,KAAK,CAACE,KAAV,CANF,CADF;AAUD;;AACD,eAAO,GAAP;AACD,OAdM,CAAP;AAeD;;AACD,WAAO,GAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKN,UAAL,EAAP;AACD;;AA9BqC,C,CAiCxC;;;AACA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEP,IAAAA,MAAM,EAAEO,KAAK,CAACC,SAAN,CAAgBC;AAA1B,GAAP;AACD,CAFD,C,CAIA;;;AACA,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,SAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovies } from \"../../actions\";\nimport \"./movieCard.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchMovies(id);\n  }\n\n  renderCard() {\n    //if movies from api hasn't been loaded will render nothing, prevents error\n    if (this.props.movies) {\n      //loop through movies foreach movie return jsx\n      return this.props.movies.map(movie => {\n        if (movie.poster_path) {\n          return (\n            <div key={movie.id}>\n              <img\n                className=\"movie-card-image\"\n                src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <p>{movie.title}</p>\n            </div>\n          );\n        }\n        return \" \";\n      });\n    }\n    return \" \";\n  }\n  render() {\n    return this.renderCard();\n  }\n}\n\n//filter data from redux store to use in the component as a prop\nconst mapStateToProps = state => {\n  return { movies: state.movieData.results };\n};\n\n//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps, { fetchMovies })(MovieCard);\n"]},"metadata":{},"sourceType":"module"}