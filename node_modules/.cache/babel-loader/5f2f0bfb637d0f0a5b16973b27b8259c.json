{"ast":null,"code":"import _classCallCheck from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import{FaStar,FaRegStar,FaHeart}from\"react-icons/fa\";import Rating from\"react-rating\";import{fetchShowDetails,fetchShowVideos,fetchShowCredits,fetchShowSimilar,fetchGenres,postFavorite}from\"../../../actions\";import\"../movieDetails.scss\";import TrailersCarousel from\"../trailerscarousel/TrailersCarousel\";import PeopleCarousel from\"../peoplecarousel/PeopleCarousel\";import Carousel from\"../../carousel/Carousel\";import renderMovieGenres from\"../../renderMovieGenres\";import Loader from\"../../loader/Loader\";var ShowDetails=/*#__PURE__*/function(_React$Component){_inherits(ShowDetails,_React$Component);function ShowDetails(){var _getPrototypeOf2;var _this;_classCallCheck(this,ShowDetails);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ShowDetails)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.onClickAddToFavorites=function(){console.log(\"Added to favorites\");var id=_this.props.match.params.id;//post action creators for favorite tv shows list\n_this.props.postFavorite(id,\"tv\",true);//change color to secondary after click\ndocument.querySelector(\".details-fav-heart\").style.color=\"#fe346e\";};_this.renderDetails=function(){if(_this.props.show){return React.createElement(\"div\",{className:\"movie-details\"},React.createElement(\"header\",{className:\"movie-details-header\",style:{background:\"linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/\".concat(_this.props.show.backdrop_path,\") center/cover no-repeat border-box, rgb(255, 255, 255)\")}},React.createElement(\"div\",{className:\"movie-details-header-info-container\"},React.createElement(\"img\",{className:\"movie-details-poster\",src:\"http://image.tmdb.org/t/p/w500/\".concat(_this.props.show.poster_path),alt:_this.props.show.name}),React.createElement(\"div\",{className:\"movie-details-title\"},React.createElement(\"h1\",null,_this.props.show.name),React.createElement(Rating,{emptySymbol:React.createElement(FaRegStar,{className:\"movie-details-star-rating\"}),fullSymbol:React.createElement(FaStar,{className:\"movie-details-star-rating\"}),initialRating:_this.props.show.vote_average/2,readonly:true}),React.createElement(\"p\",null,\"\".concat(_this.props.show.status,\" | \").concat(_this.renderDate(_this.props.show.first_air_date),\" |\\n                  \").concat(_this.props.show.original_language)),React.createElement(\"p\",{className:\"movie-details-summary-genres\"},renderMovieGenres(_this.props.show.genres,_this.props.genres))),React.createElement(FaHeart,{className:\"icon details-fav-heart\",onClick:_this.onClickAddToFavorites}))),React.createElement(\"main\",{className:\"movie-details-main\"},React.createElement(\"div\",{className:\"movie-details-summary\"},React.createElement(\"h2\",null,\"Summary\"),React.createElement(\"p\",null,_this.props.show.overview)),_this.renderVideos(_this.props.videos),_this.renderCredits(_this.props.credits),_this.renderSimilarShows(_this.props.similar)));}return;};return _this;}_createClass(ShowDetails,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchData();}//checks if props changed compares it to previous props\n//checks if id is the same as previous id\n//the props being changed is the id in the URL to make the request to the api using id\n//scroll to the top\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.match.params.id!==this.props.match.params.id){this.fetchData();}window.scrollTo(0,0);}//make api request using action creators\n},{key:\"fetchData\",value:function fetchData(){var id=this.props.match.params.id;this.props.fetchShowDetails(id);this.props.fetchShowVideos(id);this.props.fetchShowCredits(id);this.props.fetchShowSimilar(id);this.props.fetchGenres();}},{key:\"renderSimilarShows\",value:function renderSimilarShows(similar){if(similar===undefined||similar.length===0){return null;}return React.createElement(\"div\",{className:\"movie-details-carousel-container\"},React.createElement(\"h1\",{className:\"movie-details-main-genre\"},\"Similar Shows\"),React.createElement(Carousel,{shows:similar}));}//if there are no trailers return null\n},{key:\"renderVideos\",value:function renderVideos(videos){if(videos===undefined||videos.length===0){return null;}return React.createElement(\"div\",{className:\"movie-details-carousel-container\"},React.createElement(\"h1\",{className:\"movie-details-main-genre\"},\"Videos\"),React.createElement(TrailersCarousel,{trailers:videos}));}//if credits data have not loaded return nothing\n},{key:\"renderCredits\",value:function renderCredits(credits){if(credits===undefined||credits.length===0){return null;}return React.createElement(\"div\",{className:\"movie-details-carousel-container\"},React.createElement(\"h1\",{className:\"movie-details-main-genre\"},\"Cast\"),React.createElement(PeopleCarousel,{credits:credits}));}//filter year/month/day from release date\n},{key:\"renderDate\",value:function renderDate(releaseDate){if(releaseDate){var date=releaseDate.split(\"-\");var year=date[0];return year;}return null;}//this method is a callback function from onclick so it must be an arrow function\n},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(Loader,{lazyload:true}),\" \",this.renderDetails());}}]);return ShowDetails;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{show:state.showDetails,credits:state.showCredits.cast,videos:state.showVideos.results,similar:state.showSimilar.results,genres:state.genresData.genres,status:state.postFavoriteStatus.status_message};};export default connect(mapStateToProps,{fetchShowDetails:fetchShowDetails,fetchShowVideos:fetchShowVideos,fetchShowCredits:fetchShowCredits,fetchShowSimilar:fetchShowSimilar,fetchGenres:fetchGenres,postFavorite:postFavorite})(ShowDetails);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/details/showdetails/ShowDetails.js"],"names":["React","connect","FaStar","FaRegStar","FaHeart","Rating","fetchShowDetails","fetchShowVideos","fetchShowCredits","fetchShowSimilar","fetchGenres","postFavorite","TrailersCarousel","PeopleCarousel","Carousel","renderMovieGenres","Loader","ShowDetails","onClickAddToFavorites","console","log","id","props","match","params","document","querySelector","style","color","renderDetails","show","background","backdrop_path","poster_path","name","vote_average","status","renderDate","first_air_date","original_language","genres","overview","renderVideos","videos","renderCredits","credits","renderSimilarShows","similar","fetchData","prevProps","window","scrollTo","undefined","length","releaseDate","date","split","year","Component","mapStateToProps","state","showDetails","showCredits","cast","showVideos","results","showSimilar","genresData","postFavoriteStatus","status_message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FaStar, FaRegStar, FaHeart } from \"react-icons/fa\";\nimport Rating from \"react-rating\";\n\nimport {\n  fetchShowDetails,\n  fetchShowVideos,\n  fetchShowCredits,\n  fetchShowSimilar,\n  fetchGenres,\n  postFavorite,\n} from \"../../../actions\";\nimport \"../movieDetails.scss\";\nimport TrailersCarousel from \"../trailerscarousel/TrailersCarousel\";\nimport PeopleCarousel from \"../peoplecarousel/PeopleCarousel\";\nimport Carousel from \"../../carousel/Carousel\";\nimport renderMovieGenres from \"../../renderMovieGenres\";\nimport Loader from \"../../loader/Loader\";\n\nclass ShowDetails extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  //checks if props changed compares it to previous props\n  //checks if id is the same as previous id\n  //the props being changed is the id in the URL to make the request to the api using id\n  //scroll to the top\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.fetchData();\n    }\n    window.scrollTo(0, 0);\n  }\n\n  //make api request using action creators\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchShowDetails(id);\n    this.props.fetchShowVideos(id);\n    this.props.fetchShowCredits(id);\n    this.props.fetchShowSimilar(id);\n    this.props.fetchGenres();\n  }\n\n  renderSimilarShows(similar) {\n    if (similar === undefined || similar.length === 0) {\n      return null;\n    }\n    return (\n      <div className=\"movie-details-carousel-container\">\n        <h1 className=\"movie-details-main-genre\">Similar Shows</h1>\n        <Carousel shows={similar} />\n      </div>\n    );\n  }\n\n  //if there are no trailers return null\n  renderVideos(videos) {\n    if (videos === undefined || videos.length === 0) {\n      return null;\n    }\n    return (\n      <div className=\"movie-details-carousel-container\">\n        <h1 className=\"movie-details-main-genre\">Videos</h1>\n        <TrailersCarousel trailers={videos} />\n      </div>\n    );\n  }\n\n  //if credits data have not loaded return nothing\n  renderCredits(credits) {\n    if (credits === undefined || credits.length === 0) {\n      return null;\n    }\n    return (\n      <div className=\"movie-details-carousel-container\">\n        <h1 className=\"movie-details-main-genre\">Cast</h1>\n        <PeopleCarousel credits={credits} />\n      </div>\n    );\n  }\n\n  //filter year/month/day from release date\n  renderDate(releaseDate) {\n    if (releaseDate) {\n      const date = releaseDate.split(\"-\");\n      const year = date[0];\n      return year;\n    }\n    return null;\n  }\n\n  //this method is a callback function from onclick so it must be an arrow function\n  onClickAddToFavorites = () => {\n    console.log(\"Added to favorites\");\n    const id = this.props.match.params.id;\n    //post action creators for favorite tv shows list\n    this.props.postFavorite(id, \"tv\", true);\n    //change color to secondary after click\n    document.querySelector(\".details-fav-heart\").style.color = \"#fe346e\";\n  };\n\n  renderDetails = () => {\n    if (this.props.show) {\n      return (\n        <div className=\"movie-details\">\n          <header\n            className=\"movie-details-header\"\n            style={{\n              background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.show.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n            }}\n          >\n            <div className=\"movie-details-header-info-container\">\n              <img\n                className=\"movie-details-poster\"\n                src={`http://image.tmdb.org/t/p/w500/${this.props.show.poster_path}`}\n                alt={this.props.show.name}\n              />\n              <div className=\"movie-details-title\">\n                <h1>{this.props.show.name}</h1>\n                <Rating\n                  emptySymbol={\n                    <FaRegStar className=\"movie-details-star-rating\" />\n                  }\n                  fullSymbol={<FaStar className=\"movie-details-star-rating\" />}\n                  initialRating={this.props.show.vote_average / 2}\n                  readonly\n                />\n                <p>\n                  {`${this.props.show.status} | ${this.renderDate(\n                    this.props.show.first_air_date,\n                  )} |\n                  ${this.props.show.original_language}`}\n                </p>\n                <p className=\"movie-details-summary-genres\">\n                  {renderMovieGenres(this.props.show.genres, this.props.genres)}\n                </p>\n              </div>\n              <FaHeart\n                className=\"icon details-fav-heart\"\n                onClick={this.onClickAddToFavorites}\n              />\n            </div>\n          </header>\n          <main className=\"movie-details-main\">\n            <div className=\"movie-details-summary\">\n              <h2>Summary</h2>\n              <p>{this.props.show.overview}</p>\n            </div>\n\n            {this.renderVideos(this.props.videos)}\n\n            {this.renderCredits(this.props.credits)}\n\n            {this.renderSimilarShows(this.props.similar)}\n          </main>\n        </div>\n      );\n    }\n    return;\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Loader lazyload={true} /> {this.renderDetails()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    show: state.showDetails,\n    credits: state.showCredits.cast,\n    videos: state.showVideos.results,\n    similar: state.showSimilar.results,\n    genres: state.genresData.genres,\n    status: state.postFavoriteStatus.status_message,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchShowDetails,\n  fetchShowVideos,\n  fetchShowCredits,\n  fetchShowSimilar,\n  fetchGenres,\n  postFavorite,\n})(ShowDetails);\n"]},"metadata":{},"sourceType":"module"}