{"ast":null,"code":"import TMDB, { KEY } from \"../apis/TMDB\"; //Import baseURL & API Key\n\nimport history from \"../history\"; //action creator\n//Applying redux-thunk to action creator that is async await to request API\n\nexport const fetchMovies = searchTerm => async dispatch => {\n  const response = await TMDB.get(`/search/movie?api_key=${KEY}&query=${searchTerm}`);\n  dispatch({\n    type: \"FETCH_MOVIES\",\n    payload: response.data\n  });\n  history.push(\"/movielist\");\n}; //action creator\n//Creates an action with a payload that is the changed input\n\nexport const onInputChange = searchTerm => {\n  //connect function in component will handle dispatch of this action\n  return {\n    type: \"ON_INPUT_CHANGE\",\n    payload: searchTerm\n  };\n}; //action creator\n//Creates an action with a payload of the trending movie data from the API request\n//does not dispatch action until API data has been loaded\n\nexport const fetchTrending = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_TRENDING\",\n    payload: response.data\n  });\n}; //action creator\n//Creates an action with a payload of upcoming movie data from the API request\n//does not dispatch action until API data has been loaded\n\nexport const fetchUpcoming = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${KEY}`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_UPCOMING\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchMovieDetails = id => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_MOVIE_DETAILS\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchCredits = id => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}\n    `); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_CREDITS\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchTopRated = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${KEY}&language=en-US&page=1`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_TOP_RATED\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchNowPlaying = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${KEY}&language=en-US&page=1`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_NOW_PLAYING\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchPopular = () => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&language=en-US&page=1`); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_POPULAR\",\n    payload: response.data\n  });\n}; //action creator\n\nexport const fetchTrailers = id => async dispatch => {\n  const response = await TMDB.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${KEY}&language=en-US\n    `); //dispatches action to matching type reducer\n\n  dispatch({\n    type: \"FETCH_TRAILERS\",\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/actions/index.js"],"names":["TMDB","KEY","history","fetchMovies","searchTerm","dispatch","response","get","type","payload","data","push","onInputChange","fetchTrending","fetchUpcoming","fetchMovieDetails","id","fetchCredits","fetchTopRated","fetchNowPlaying","fetchPopular","fetchTrailers"],"mappings":"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","sourcesContent":["import TMDB, { KEY } from \"../apis/TMDB\"; //Import baseURL & API Key\nimport history from \"../history\";\n\n//action creator\n//Applying redux-thunk to action creator that is async await to request API\nexport const fetchMovies = searchTerm => async dispatch => {\n  const response = await TMDB.get(\n    `/search/movie?api_key=${KEY}&query=${searchTerm}`,\n  );\n\n  dispatch({ type: \"FETCH_MOVIES\", payload: response.data });\n  history.push(\"/movielist\");\n};\n\n//action creator\n//Creates an action with a payload that is the changed input\nexport const onInputChange = searchTerm => {\n  //connect function in component will handle dispatch of this action\n  return {\n    type: \"ON_INPUT_CHANGE\",\n    payload: searchTerm,\n  };\n};\n\n//action creator\n//Creates an action with a payload of the trending movie data from the API request\n//does not dispatch action until API data has been loaded\nexport const fetchTrending = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_TRENDING\", payload: response.data });\n};\n\n//action creator\n//Creates an action with a payload of upcoming movie data from the API request\n//does not dispatch action until API data has been loaded\nexport const fetchUpcoming = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${KEY}`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_UPCOMING\", payload: response.data });\n};\n\n//action creator\nexport const fetchMovieDetails = id => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_MOVIE_DETAILS\", payload: response.data });\n};\n\n//action creator\nexport const fetchCredits = id => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}\n    `,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_CREDITS\", payload: response.data });\n};\n\n//action creator\nexport const fetchTopRated = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/top_rated?api_key=${KEY}&language=en-US&page=1`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_TOP_RATED\", payload: response.data });\n};\n\n//action creator\nexport const fetchNowPlaying = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${KEY}&language=en-US&page=1`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_NOW_PLAYING\", payload: response.data });\n};\n\n//action creator\nexport const fetchPopular = () => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&language=en-US&page=1`,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_POPULAR\", payload: response.data });\n};\n\n//action creator\nexport const fetchTrailers = id => async dispatch => {\n  const response = await TMDB.get(\n    `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${KEY}&language=en-US\n    `,\n  );\n\n  //dispatches action to matching type reducer\n  dispatch({ type: \"FETCH_TRAILERS\", payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}