{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/moviedetails/MovieDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovieDetails, fetchCredits, fetchTrailers } from \"../../actions\";\nimport \"./movieDetails.scss\";\nimport TrailersCarousel from \"./trailerscarousel/TrailersCarousel.js\";\nimport PeopleCarousel from \"./peoplecarousel/PeopleCarousel\";\nimport Carousel from \"../carousel/Carousel\";\n\nclass MovieDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDetails = () => {\n      if (this.props.movie.backdrop_path) {\n        return React.createElement(\"div\", {\n          className: \"movie-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"movie-details-header\",\n          style: {\n            background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.movie.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"movie-details-header-info-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })), React.createElement(\"main\", {\n          className: \"movie-details-main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"movie-details-summary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Summary\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, this.props.movie.overview)), React.createElement(TrailersCarousel, {\n          trailers: this.props.trailers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(PeopleCarousel, {\n          credits: this.props.credits,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(Carousel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        })));\n      }\n\n      return \"\";\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchMovieDetails(id);\n    this.props.fetchCredits(id);\n    this.props.fetchTrailers(id);\n    console.log(id);\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" \", this.renderDetails());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movieDetails,\n    credits: state.creditsData.cast,\n    trailers: state.trailersData.results\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovieDetails,\n  fetchCredits,\n  fetchTrailers,\n  fetchSimilarMovie\n})(MovieDetails);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/moviedetails/MovieDetails.js"],"names":["React","connect","fetchMovieDetails","fetchCredits","fetchTrailers","TrailersCarousel","PeopleCarousel","Carousel","MovieDetails","Component","renderDetails","props","movie","backdrop_path","background","overview","trailers","credits","componentDidMount","id","match","params","console","log","render","mapStateToProps","state","movieDetails","creditsData","cast","trailersData","results","fetchSimilarMovie"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,aAA1C,QAA+D,eAA/D;AACA,OAAO,qBAAP;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SASzCC,aATyC,GASzB,MAAM;AACpB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,aAArB,EAAoC;AAClC,eACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,sBADZ;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAG,4GAA2G,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,aAAc;AADlJ,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EASE;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKF,KAAL,CAAWC,KAAX,CAAiBG,QAArB,CAFF,CADF,EAKE,oBAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME,oBAAC,cAAD;AAAgB,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CATF,CADF;AAqBD;;AACD,aAAO,EAAP;AACD,KAlCwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAG,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBF,EAAnC;AACA,SAAKR,KAAL,CAAWT,iBAAX,CAA6BiB,EAA7B;AACA,SAAKR,KAAL,CAAWR,YAAX,CAAwBgB,EAAxB;AACA,SAAKR,KAAL,CAAWP,aAAX,CAAyBe,EAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACD;;AA4BDK,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKD,aAAL,EAAP,CAAP;AACD;;AAtCwC;;AAyC3C,MAAMe,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,KAAK,EAAEc,KAAK,CAACC,YADR;AAELV,IAAAA,OAAO,EAAES,KAAK,CAACE,WAAN,CAAkBC,IAFtB;AAGLb,IAAAA,QAAQ,EAAEU,KAAK,CAACI,YAAN,CAAmBC;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAe9B,OAAO,CAACwB,eAAD,EAAkB;AACtCvB,EAAAA,iBADsC;AAEtCC,EAAAA,YAFsC;AAGtCC,EAAAA,aAHsC;AAItC4B,EAAAA;AAJsC,CAAlB,CAAP,CAKZxB,YALY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovieDetails, fetchCredits, fetchTrailers } from \"../../actions\";\nimport \"./movieDetails.scss\";\nimport TrailersCarousel from \"./trailerscarousel/TrailersCarousel.js\";\nimport PeopleCarousel from \"./peoplecarousel/PeopleCarousel\";\nimport Carousel from \"../carousel/Carousel\";\n\nclass MovieDetails extends React.Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchMovieDetails(id);\n    this.props.fetchCredits(id);\n    this.props.fetchTrailers(id);\n    console.log(id);\n  }\n\n  renderDetails = () => {\n    if (this.props.movie.backdrop_path) {\n      return (\n        <div className=\"movie-details\">\n          <header\n            className=\"movie-details-header\"\n            style={{\n              background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(https://image.tmdb.org/t/p/original/${this.props.movie.backdrop_path}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n            }}\n          >\n            <div className=\"movie-details-header-info-container\"></div>\n          </header>\n          <main className=\"movie-details-main\">\n            <div className=\"movie-details-summary\">\n              <h2>Summary</h2>\n              <p>{this.props.movie.overview}</p>\n            </div>\n            <TrailersCarousel trailers={this.props.trailers} />\n            <PeopleCarousel credits={this.props.credits} />\n            <Carousel />\n          </main>\n        </div>\n      );\n    }\n    return \"\";\n  };\n  render() {\n    console.log(this.props);\n    return <div> {this.renderDetails()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movieDetails,\n    credits: state.creditsData.cast,\n    trailers: state.trailersData.results,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovieDetails,\n  fetchCredits,\n  fetchTrailers,\n  fetchSimilarMovie,\n})(MovieDetails);\n"]},"metadata":{},"sourceType":"module"}