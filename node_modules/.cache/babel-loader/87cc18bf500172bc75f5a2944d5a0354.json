{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/favorites/Favorites.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchFavoriteMovies, fetchFavoriteShows } from \"../../actions\";\nimport MovieList from \"../list/List\";\nimport \"./favorites.scss\";\nimport Loader from \"../loader/Loader\"; //login page\n\nclass Favorites extends React.Component {\n  //need to fetch the data of genres and nowplaying movies\n  componentDidMount() {\n    this.props.fetchFavoriteMovies();\n    this.props.fetchFavoriteShows();\n  } //this checks if pevious props changed and fetches fetchFavoriteMovies again and rerenders component\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      //if session still exists fetch favorites\n      //this conditional prevents fetch of favorites when user signes out\n      if (localStorage.getItem(\"session\")) {\n        this.props.fetchFavoriteMovies();\n        this.props.fetchFavoriteShows();\n      }\n    }\n  }\n\n  renderFavorites() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Movies\"), React.createElement(MovieList, {\n      items: this.props.movies,\n      isDeletable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Shows\"), React.createElement(MovieList, {\n      items: this.props.shows,\n      type: \"shows\",\n      isDeletable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  } //login is reusing the imagecarousel component resized\n\n\n  render() {\n    console.log(this.props);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      lazyload: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-favorites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Favorites\"), this.renderFavorites()));\n  }\n\n} //getting the nowplaying movies and genres for each movie\n\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.favoriteMovies,\n    shows: state.favoriteShows\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFavoriteMovies,\n  fetchFavoriteShows\n})(Favorites);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/favorites/Favorites.js"],"names":["React","connect","fetchFavoriteMovies","fetchFavoriteShows","MovieList","Loader","Favorites","Component","componentDidMount","props","componentDidUpdate","prevProps","localStorage","getItem","renderFavorites","movies","shows","render","console","log","mapStateToProps","state","favoriteMovies","favoriteShows"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,eAAxD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AACA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACtC;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWP,mBAAX;AACA,SAAKO,KAAL,CAAWN,kBAAX;AACD,GALqC,CAOtC;;;AACAO,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,KAAK,KAAKF,KAAvB,EAA8B;AAC5B;AACA;AACA,UAAIG,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnC,aAAKJ,KAAL,CAAWP,mBAAX;AACA,aAAKO,KAAL,CAAWN,kBAAX;AACD;AACF;AACF;;AAEDW,EAAAA,eAAe,GAAG;AAChB,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,MAA7B;AAAqC,MAAA,WAAW,EAAE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KAA7B;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAiD,MAAA,WAAW,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD,GA5BqC,CA8BtC;;;AACAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,KAAKK,eAAL,EAFH,CAFF,CADF;AASD;;AA3CqC,C,CA8CxC;;;AACA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,MAAM,EAAEM,KAAK,CAACC,cADT;AAELN,IAAAA,KAAK,EAAEK,KAAK,CAACE;AAFR,GAAP;AAID,CALD;;AAOA,eAAetB,OAAO,CAACmB,eAAD,EAAkB;AACtClB,EAAAA,mBADsC;AAEtCC,EAAAA;AAFsC,CAAlB,CAAP,CAGZG,SAHY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchFavoriteMovies, fetchFavoriteShows } from \"../../actions\";\nimport MovieList from \"../list/List\";\nimport \"./favorites.scss\";\nimport Loader from \"../loader/Loader\";\n\n//login page\nclass Favorites extends React.Component {\n  //need to fetch the data of genres and nowplaying movies\n  componentDidMount() {\n    this.props.fetchFavoriteMovies();\n    this.props.fetchFavoriteShows();\n  }\n\n  //this checks if pevious props changed and fetches fetchFavoriteMovies again and rerenders component\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      //if session still exists fetch favorites\n      //this conditional prevents fetch of favorites when user signes out\n      if (localStorage.getItem(\"session\")) {\n        this.props.fetchFavoriteMovies();\n        this.props.fetchFavoriteShows();\n      }\n    }\n  }\n\n  renderFavorites() {\n    return (\n      <React.Fragment>\n        <h2>Movies</h2>\n        <MovieList items={this.props.movies} isDeletable={true} />\n        <h2>Shows</h2>\n        <MovieList items={this.props.shows} type=\"shows\" isDeletable={true} />\n      </React.Fragment>\n    );\n  }\n\n  //login is reusing the imagecarousel component resized\n  render() {\n    console.log(this.props);\n\n    return (\n      <React.Fragment>\n        <Loader lazyload={true} />\n        <div className=\"main-favorites\">\n          <h1>Favorites</h1>\n          {this.renderFavorites()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n//getting the nowplaying movies and genres for each movie\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.favoriteMovies,\n    shows: state.favoriteShows,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFavoriteMovies,\n  fetchFavoriteShows,\n})(Favorites);\n"]},"metadata":{},"sourceType":"module"}