{"ast":null,"code":"import _classCallCheck from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cedrickmonesit/Desktop/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import{fetchMovies}from\"../../actions\";import MovieList from\"../list/List\";import\"./searchResults.scss\";var MovieCard=/*#__PURE__*/function(_React$Component){_inherits(MovieCard,_React$Component);function MovieCard(){_classCallCheck(this,MovieCard);return _possibleConstructorReturn(this,_getPrototypeOf(MovieCard).apply(this,arguments));}_createClass(MovieCard,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchData();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.match.params.searchterm!==this.props.match.params.searchterm){this.fetchData();}window.scrollTo(0,0);}},{key:\"fetchData\",value:function fetchData(){//this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\nif(this.props.match){this.props.fetchMovies(this.props.match.params.searchterm);}}},{key:\"renderSearchTerm\",value:function renderSearchTerm(){if(this.props.match){return this.props.match.params.searchterm;}}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"main-search-results\"},React.createElement(\"h1\",null,\"Search Results For \",this.renderSearchTerm()),React.createElement(MovieList,{items:this.props.movies}));}}]);return MovieCard;}(React.Component);//filter data from redux store to use in the component as a prop\nvar mapStateToProps=function mapStateToProps(state){return{movies:state.movieData.results};};//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps,{fetchMovies:fetchMovies})(MovieCard);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/searchresults/SearchResults.js"],"names":["React","connect","fetchMovies","MovieList","MovieCard","fetchData","prevProps","match","params","searchterm","props","window","scrollTo","renderSearchTerm","movies","Component","mapStateToProps","state","movieData","results"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAO,sBAAP,C,GAEMC,CAAAA,S,iTACgB,CAClB,KAAKC,SAAL,GACD,C,8DAEkBC,S,CAAW,CAC5B,GACEA,SAAS,CAACC,KAAV,CAAgBC,MAAhB,CAAuBC,UAAvB,GAAsC,KAAKC,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UADhE,CAEE,CACA,KAAKJ,SAAL,GACD,CACDM,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,C,6CAEW,CACV;AACA,GAAI,KAAKF,KAAL,CAAWH,KAAf,CAAsB,CACpB,KAAKG,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/C,EACD,CACF,C,2DAEkB,CACjB,GAAI,KAAKC,KAAL,CAAWH,KAAf,CAAsB,CACpB,MAAO,MAAKG,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/B,CACD,CACF,C,uCAEQ,CACP,MACE,4BAAK,SAAS,CAAC,qBAAf,EACE,oDAAwB,KAAKI,gBAAL,EAAxB,CADF,CAEE,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKH,KAAL,CAAWI,MAA7B,EAFF,CADF,CAMD,C,uBAlCqBd,KAAK,CAACe,S,EAqC9B;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CAAEH,MAAM,CAAEG,KAAK,CAACC,SAAN,CAAgBC,OAA1B,CAAP,CACD,CAFD,CAIA;AACA,cAAelB,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEd,WAAW,CAAXA,WAAF,CAAlB,CAAP,CAA0CE,SAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovies } from \"../../actions\";\nimport MovieList from \"../list/List\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.match.params.searchterm !== this.props.match.params.searchterm\n    ) {\n      this.fetchData();\n    }\n    window.scrollTo(0, 0);\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchMovies(this.props.match.params.searchterm);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.searchterm;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main-search-results\">\n        <h1>Search Results For {this.renderSearchTerm()}</h1>\n        <MovieList items={this.props.movies} />\n      </div>\n    );\n  }\n}\n\n//filter data from redux store to use in the component as a prop\nconst mapStateToProps = (state) => {\n  return { movies: state.movieData.results };\n};\n\n//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps, { fetchMovies })(MovieCard);\n"]},"metadata":{},"sourceType":"module"}