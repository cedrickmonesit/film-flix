{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Desktop/movie-app/src/components/searchresults/SearchResults.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../../actions\";\nimport MovieList from \"../movielist/MovieList\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.searchterm !== this.props.match.params.searchterm) {\n      this.fetchData();\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchMovies(this.props.match.params.searchterm);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.searchterm;\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"main-search-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Search Results For \", this.renderSearchTerm()), React.createElement(MovieList, {\n      movies: this.props.movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n} //filter data from redux store to use in the component as a prop\n\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movieData.results\n  };\n}; //connect function from react-redux to access redux store and dispatch actions\n\n\nexport default connect(mapStateToProps, {\n  fetchMovies\n})(MovieCard);","map":{"version":3,"sources":["/Users/cedrickmonesit/Desktop/movie-app/src/components/searchresults/SearchResults.js"],"names":["React","connect","fetchMovies","MovieList","MovieCard","Component","componentDidMount","fetchData","componentDidUpdate","prevProps","match","params","searchterm","props","window","scrollTo","renderSearchTerm","render","console","log","movies","mapStateToProps","state","movieData","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,sBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QACEA,SAAS,CAACC,KAAV,CAAgBC,MAAhB,CAAuBC,UAAvB,KAAsC,KAAKC,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UADhE,EAEE;AACA,WAAKL,SAAL;AACD;;AACDO,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAEDR,EAAAA,SAAS,GAAG;AACV;AACA,QAAI,KAAKM,KAAL,CAAWH,KAAf,EAAsB;AACpB,WAAKG,KAAL,CAAWX,WAAX,CAAuB,KAAKW,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/C;AACD;AACF;;AAEDI,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKH,KAAL,CAAWH,KAAf,EAAsB;AACpB,aAAO,KAAKG,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/B;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKG,gBAAL,EAAxB,CADF,EAEE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnCqC,C,CAsCxC;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEF,IAAAA,MAAM,EAAEE,KAAK,CAACC,SAAN,CAAgBC;AAA1B,GAAP;AACD,CAFD,C,CAIA;;;AACA,eAAevB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,SAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovies } from \"../../actions\";\nimport MovieList from \"../movielist/MovieList\";\nimport \"./searchResults.scss\";\n\nclass MovieCard extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.match.params.searchterm !== this.props.match.params.searchterm\n    ) {\n      this.fetchData();\n    }\n    window.scrollTo(0, 0);\n  }\n\n  fetchData() {\n    //this makes sure that if the document is refreshed the component can fetch the data by itself according to the URL searchterm variable using Router\n    if (this.props.match) {\n      this.props.fetchMovies(this.props.match.params.searchterm);\n    }\n  }\n\n  renderSearchTerm() {\n    if (this.props.match) {\n      return this.props.match.params.searchterm;\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"main-search-results\">\n        <h1>Search Results For {this.renderSearchTerm()}</h1>\n        <MovieList movies={this.props.movies} />\n      </div>\n    );\n  }\n}\n\n//filter data from redux store to use in the component as a prop\nconst mapStateToProps = state => {\n  return { movies: state.movieData.results };\n};\n\n//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps, { fetchMovies })(MovieCard);\n"]},"metadata":{},"sourceType":"module"}