{"ast":null,"code":"var _jsxFileName = \"/Users/cedrickmonesit/Documents/GitHub/film-flix-client/src/components/actorDetails/ActorDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchActor, fetchActorMovies } from \"../../actions\";\nimport \"./actorDetails.scss\";\nimport cinema from \"../../images/cinema.jpg\";\nimport MovieList from \"../list/List\";\n\nclass ActorDetails extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderDetails = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actor-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"actor-details-header\",\n        style: {\n          background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(${cinema}) 20% 20%/cover no-repeat border-box, rgb(255, 255, 255)`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actor-details-header-info-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"actor-details-poster\",\n        src: `https://image.tmdb.org/t/p/w500/${this.props.actor.profile_path}`,\n        alt: this.props.actor.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actor-details-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, this.props.actor.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, `${this.renderGender(this.props.actor.gender)} \n                | \n                ${this.renderJob(this.props.actor.known_for_department, this.props.actor.gender)}`), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, this.renderBirthday(this.props.actor.birthday)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"actor-details-summary-genres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, this.props.actor.place_of_birth)))), /*#__PURE__*/React.createElement(\"main\", {\n        className: \"actor-details-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, this.renderBiography(this.props.actor.biography), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actor-details-main-popular-roles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, \"Popular Roles\"), /*#__PURE__*/React.createElement(MovieList, {\n        items: this.props.movies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }))));\n    };\n  }\n\n  //when component mounts fetch data and move to top of page\n  componentDidMount() {\n    this.fetchData();\n    window.scrollTo(0, 0);\n  } //make api request with action creators\n\n\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchActor(id);\n    this.props.fetchActorMovies(id);\n  } //birthday date filtering from year-month-day to month/day/year and age\n\n\n  renderBirthday(birthday) {\n    if (birthday) {\n      const date = birthday.split(\"-\");\n      const year = date[0];\n      const month = date[1];\n      const day = date[2];\n      const age = new Date().getFullYear() - year;\n      return `${month}/${day}/${year} | ${age} yo`;\n    }\n\n    return null;\n  } //checks what gender person is\n\n\n  renderGender(gender) {\n    const male = 2;\n    const female = 1;\n\n    if (gender === male) {\n      return \"Male\";\n    } else if (gender === female) {\n      return \"Female\";\n    }\n  } //actor job checks if they're female or male\n\n\n  renderJob(job, gender) {\n    if (job === \"Acting\" && gender) {\n      if (gender === 1) {\n        return \"Actress\";\n      } else if (gender === 2) {\n        return \"Actor\";\n      }\n    } else {\n      return job;\n    }\n  }\n\n  renderBiography(biography) {\n    if (biography) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actor-details-summary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Biography\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, biography));\n    }\n\n    return null;\n  } //render actor page with biography and popular roles\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }\n    }, this.renderDetails());\n  }\n\n} //add actor and movies object from Redux Store to props of this component\n\n\nconst mapStateToProps = state => {\n  return {\n    actor: state.actorData,\n    movies: state.actorMoviesData.cast\n  };\n}; //connect component to Redux Store using connect() to Provider {Reference index.js in SRC folder }\n//connect function from react-redux to access redux store and dispatch actions\n\n\nexport default connect(mapStateToProps, {\n  fetchActor,\n  fetchActorMovies\n})(ActorDetails);","map":{"version":3,"names":["React","connect","fetchActor","fetchActorMovies","cinema","MovieList","ActorDetails","Component","renderDetails","background","props","actor","profile_path","title","name","renderGender","gender","renderJob","known_for_department","renderBirthday","birthday","place_of_birth","renderBiography","biography","movies","componentDidMount","fetchData","window","scrollTo","id","match","params","date","split","year","month","day","age","Date","getFullYear","male","female","job","render","mapStateToProps","state","actorData","actorMoviesData","cast"],"sources":["/Users/cedrickmonesit/Documents/GitHub/film-flix-client/src/components/actorDetails/ActorDetails.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchActor, fetchActorMovies } from \"../../actions\";\nimport \"./actorDetails.scss\";\nimport cinema from \"../../images/cinema.jpg\";\nimport MovieList from \"../list/List\";\n\nclass ActorDetails extends React.Component {\n  //when component mounts fetch data and move to top of page\n  componentDidMount() {\n    this.fetchData();\n    window.scrollTo(0, 0);\n  }\n\n  //make api request with action creators\n  fetchData() {\n    const id = this.props.match.params.id;\n    this.props.fetchActor(id);\n    this.props.fetchActorMovies(id);\n  }\n\n  //birthday date filtering from year-month-day to month/day/year and age\n  renderBirthday(birthday) {\n    if (birthday) {\n      const date = birthday.split(\"-\");\n      const year = date[0];\n      const month = date[1];\n      const day = date[2];\n      const age = new Date().getFullYear() - year;\n      return `${month}/${day}/${year} | ${age} yo`;\n    }\n    return null;\n  }\n\n  //checks what gender person is\n  renderGender(gender) {\n    const male = 2;\n    const female = 1;\n    if (gender === male) {\n      return \"Male\";\n    } else if (gender === female) {\n      return \"Female\";\n    }\n  }\n\n  //actor job checks if they're female or male\n  renderJob(job, gender) {\n    if (job === \"Acting\" && gender) {\n      if (gender === 1) {\n        return \"Actress\";\n      } else if (gender === 2) {\n        return \"Actor\";\n      }\n    } else {\n      return job;\n    }\n  }\n\n  renderBiography(biography) {\n    if (biography) {\n      return (\n        <div className=\"actor-details-summary\">\n          <h2>Biography</h2>\n          <p>{biography}</p>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  //render actor page with biography and popular roles\n  renderDetails = () => {\n    return (\n      <div className=\"actor-details\">\n        <header\n          className=\"actor-details-header\"\n          style={{\n            background: `linear-gradient(0deg, rgb(0, 0, 0) 5%, rgba(0, 0, 0, 0.45) 92%), url(${cinema}) 20% 20%/cover no-repeat border-box, rgb(255, 255, 255)`,\n          }}\n        >\n          <div className=\"actor-details-header-info-container\">\n            <img\n              className=\"actor-details-poster\"\n              src={`https://image.tmdb.org/t/p/w500/${this.props.actor.profile_path}`}\n              alt={this.props.actor.title}\n            />\n            <div className=\"actor-details-title\">\n              <h1>{this.props.actor.name}</h1>\n              <p>\n                {`${this.renderGender(this.props.actor.gender)} \n                | \n                ${this.renderJob(\n                  this.props.actor.known_for_department,\n                  this.props.actor.gender,\n                )}`}\n              </p>\n              <p>{this.renderBirthday(this.props.actor.birthday)}</p>\n              <p className=\"actor-details-summary-genres\">\n                {this.props.actor.place_of_birth}\n              </p>\n            </div>\n          </div>\n        </header>\n        <main className=\"actor-details-main\">\n          {this.renderBiography(this.props.actor.biography)}\n          <div className=\"actor-details-main-popular-roles\">\n            <h2>Popular Roles</h2>\n            <MovieList items={this.props.movies} />\n          </div>\n        </main>\n      </div>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.renderDetails()}</React.Fragment>;\n  }\n}\n\n//add actor and movies object from Redux Store to props of this component\nconst mapStateToProps = (state) => {\n  return {\n    actor: state.actorData,\n    movies: state.actorMoviesData.cast,\n  };\n};\n\n//connect component to Redux Store using connect() to Provider {Reference index.js in SRC folder }\n//connect function from react-redux to access redux store and dispatch actions\nexport default connect(mapStateToProps, {\n  fetchActor,\n  fetchActorMovies,\n})(ActorDetails);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}